abs(mixed number) Absolute value
acos(float arg) Arc cosine
acosh(float arg) Inverse hyperbolic cosine
addcslashes(string str, string charlist) Quote string with slashes in a C style
addslashes(string str) Quote string with slashes
apache_child_terminate(void) Terminate apache process after this request
apache_lookup_uri(string filename) Perform a partial request for the specified URI and return all info about it
apache_note(string note_name [, string note_value]) Get and set apache request notes
apache_setenv(string variable, string value [, bool walk_to_top]) Set an Apache subprocess_env variable
array([mixed ...]) Create an array
array_count_values(array input) Counts all the values of an array
array_diff(array array1, array array2 [, array ...]) Computes the difference of arrays
array_fill(int start_index, int num, mixed value) Fill an array with values
array_filter(array input [, mixed callback]) Filters elements of an array using a callback function
array_flip(array trans) Flip all the values of an array
array_change_key_case(array input [, int case]) Returns an array with all string keys lowercased or uppercased
array_chunk(array input, int size [, bool preserve_keys]) Split an array into chunks
array_intersect(array array1, array array2 [, array ...]) Computes the intersection of arrays
array_key_exists(mixed key, array search) Checks if the given key or index exists in the array
array_keys(array input [, mixed search_value]) Return all the keys of an array
array_map(mixed callback, array arr1 [, array arr2...]) Applies the callback to the elements of the given arrays
array_merge(array array1, array array2 [, array ...]) Merge two or more arrays
array_merge_recursive(array array1, array array2 [, array ...]) Merge two or more arrays recursively
array_multisort(array ar1 [, mixed arg [, mixed ... [, array ...]]]) Sort multiple or multi-dimensional arrays
array_pad(array input, int pad_size, mixed pad_value) Pad array to the specified length with a value
array_pop(array array) Pop the element off the end of array
array_push(array array, mixed var [, mixed ...]) Push one or more elements onto the end of array
array_rand(array input [, int num_req]) Pick one or more random entries out of an array
array_reduce(array input, mixed callback [, int initial]) Iteratively reduce the array to a single value using a callback function
array_reverse(array array [, bool preserve_keys]) Return an array with elements in reverse order
array_search(mixed needle, array haystack [, bool strict]) Searches the array for a given value and returns the corresponding key if successful
array_shift(array array) Shift an element off the beginning of array
array_slice(array array, int offset [, int length]) Extract a slice of the array
array_splice(array input, int offset [, int length [, array replacement]]) Remove a portion of the array and replace it with something else
array_sum(array array) Calculate the sum of values in an array.
array_unique(array array) Removes duplicate values from an array
array_unshift(array array, mixed var [, mixed ...]) Prepend one or more elements to the beginning of array
array_values(array input) Return all the values of an array
array_walk(array array, string func [, mixed userdata]) Apply a user function to every member of an array
arsort(array array [, int sort_flags]) Sort an array in reverse order and maintain index association
ascii2ebcdic(string ascii_str) Translate string from ASCII to EBCDIC
asin(float arg) Arc sine
asinh(float arg) Inverse hyperbolic sine
asort(array array [, int sort_flags]) Sort an array and maintain index association
aspell_check(int dictionary_link, string word) Check a word [deprecated]
aspell_check_raw(int dictionary_link, string word) Check a word without changing its case or trying to trim it [deprecated]
aspell_new(string master [, string personal]) Load a new dictionary [deprecated]
aspell_suggest(int dictionary_link, string word) Suggest spellings of a word [deprecated]
assert(string|bool assertion) Checks if assertion is FALSE
assert_options(int what [, mixed value]) Set/get the various assert flags
atan(float arg) Arc tangent
atan2(float y, float x) arc tangent of two variables
atanh(float arg) Inverse hyperbolic tangent
base_convert(string number, int frombase, int tobase) Convert a number between arbitrary bases
base64_decode(string encoded_data) Decodes data encoded with MIME base64
base64_encode(string data) Encodes data with MIME base64
basename(string path [, string suffix]) Returns filename component of path
bcadd(string left_operand, string right_operand [, int scale]) Add two arbitrary precision numbers
bccomp(string left_operand, string right_operand [, int scale]) Compare two arbitrary precision numbers
bcdiv(string left_operand, string right_operand [, int scale]) Divide two arbitrary precision numbers
bcmod(string left_operand, string modulus) Get modulus of an arbitrary precision number
bcmul(string left_operand, string right_operand [, int scale]) Multiply two arbitrary precision number
bcpow(string x, string y [, int scale]) Raise an arbitrary precision number to another
bcscale(int scale) Set default scale parameter for all bc math functions
bcsqrt(string operand [, int scale]) Get the square root of an arbitrary precision number
bcsub(string left_operand, string right_operand [, int scale]) Subtract one arbitrary precision number from another
bin2hex(string str) Convert binary data into hexadecimal representation
bind_textdomain_codeset(string domain, string codeset) Specify the character encoding in which the messages from the DOMAIN message catalog will be returned
bindec(string binary_string) Binary to decimal
bindtextdomain(string domain, string directory) Sets the path for a domain
bzclose(resource bz) Close a bzip2 file pointer
bzcompress(string source [, int blocksize [, int workfactor]]) Compress a string into bzip2 encoded data
bzdecompress(string source [, int small]) Decompresses bzip2 encoded data
bzerrno(resource bz) Returns a bzip2 error number
bzerror(resource bz) Returns the bzip2 error number and error string in an array
bzerrstr(resource bz) Returns a bzip2 error string
bzflush(resource bz) Force a write of all buffered data
bzopen(string filename, string mode) Open a bzip2 compressed file
bzread(resource bz [, int length]) Binary safe bzip2 file read
bzwrite(resource bz, string data [, int length]) Binary safe bzip2 file write
cal_days_in_month(int calendar, int month, int year) Return the number of days in a month for a given year and calendar
cal_from_jd(int jd, int calendar) Converts from Julian Day Count to a supported calendar and return extended information
cal_info(int calendar) Returns information about a particular calendar
cal_to_jd(int calendar, int month, int day, int year) Converts from a supported calendar to Julian Day Count
call_user_func(string function_name [, mixed parameter [, mixed ...]]) Call a user function given by the first parameter
call_user_func_array(string function_name [, array paramarr]) Call a user function given with an array of parameters
call_user_method(string method_name, object obj [, mixed parameter [, mixed ...]]) Call a user method on an specific object [deprecated]
call_user_method_array(string method_name, object obj [, array paramarr]) Call a user method given with an array of parameters [deprecated]
ccvs_add(string session, string invoice, string argtype, string argval) Add data to a transaction
ccvs_auth(string session, string invoice) Perform credit authorization test on a transaction
ccvs_command(string session, string type, string argval) Performs a command which is peculiar to a single protocol, and thus is not available in the general CCVS API
ccvs_count(string session, string type) Find out how many transactions of a given type are stored in the system
ccvs_delete(string session, string invoice) Delete a transaction
ccvs_done(string sess) Terminate CCVS engine and do cleanup work
ccvs_init(string name) Initialize CCVS for use
ccvs_lookup(string session, string invoice, int inum) Look up an item of a particular type in the database #
ccvs_new(string session, string invoice) Create a new, blank transaction
ccvs_report(string session, string type) Return the status of the background communication process
ccvs_return(string session, string invoice) Transfer funds from the merchant to the credit card holder
ccvs_reverse(string session, string invoice) Perform a full reversal on an already-processed authorization
ccvs_sale(string session, string invoice) Transfer funds from the credit card holder to the merchant
ccvs_status(string session, string invoice) Check the status of an invoice
ccvs_textvalue(string session) Get text return value for previous function call
ccvs_void(string session, string invoice) Perform a full reversal on a completed transaction
ceil(float value) Round fractions up
class_exists(string class_name) Checks if the class has been defined
clearstatcache(void) Clears file stat cache
closedir(resource dir_handle) close directory handle
closelog(void) Close connection to system logger
com_addref(void) Increases the components reference counter.
com_get(resource com_object, string property) Gets the value of a COM Component's property
com_invoke(resource com_object, string function_name [, mixed function parameters, ...]) Calls a COM component's method.
com_isenum(object com_module) Grabs an IEnumVariant
com_load(string module name [, string server name [, int codepage]]) Creates a new reference to a COM component
com_load_typelib(string typelib_name [, int case_insensitive]) Loads a Typelib
com_propget(resource com_object, string property) Gets the value of a COM Component's property
com_propput(resource com_object, string property, mixed value) Assigns a value to a COM component's property
com_propset(resource com_object, string property, mixed value) Assigns a value to a COM component's property
com_release(void) Decreases the components reference counter.
com_set(resource com_object, string property, mixed value) Assigns a value to a COM component's property
compact(mixed varname [, mixed ...]) Create array containing variables and their values
connection_aborted(void) Returns TRUE if client disconnected
connection_status(void) Returns connection status bitfield
connection_timeout(void) Return TRUE if script timed out
constant(string name) Returns the value of a constant
convert_cyr_string(string str, string from, string to) Convert from one Cyrillic character set to another
copy(string source, string dest) Copies file
cos(float arg) Cosine
cosh(float arg) Hyperbolic cosine
count(mixed var) Count elements in a variable
count_chars(string string [, int mode]) Return information about characters used in a string
cpdf_add_annotation(int pdf document, float llx, float lly, float urx, float ury, string title, string content [, int mode]) Adds annotation
cpdf_add_outline(int pdf document, string text) Adds bookmark for current page
cpdf_arc(int pdf document, float x-coor, float y-coor, float radius, float start, float end [, int mode]) Draws an arc
cpdf_begin_text(int pdf document) Starts text section
cpdf_circle(int pdf document, float x-coor, float y-coor, float radius [, int mode]) Draw a circle
cpdf_clip(int pdf document) Clips to current path
cpdf_close(int pdf document) Closes the pdf document
cpdf_closepath(int pdf document) Close path
cpdf_closepath_fill_stroke(int pdf document) Close, fill and stroke current path
cpdf_closepath_stroke(int pdf document) Close path and draw line along path
cpdf_continue_text(int pdf document, string text) Output text in next line
cpdf_curveto(int pdf document, float x1, float y1, float x2, float y2, float x3, float y3 [, int mode]) Draws a curve
cpdf_end_text(int pdf document) Ends text section
cpdf_fill(int pdf document) Fill current path
cpdf_fill_stroke(int pdf document) Fill and stroke current path
cpdf_finalize(int pdf document) Ends document
cpdf_finalize_page(int pdf document, int page number) Ends page
cpdf_global_set_document_limits(int maxpages, int maxfonts, int maximages, int maxannotations, int maxobjects) Sets document limits for any pdf document
cpdf_import_jpeg(int pdf document, string file name, float x-coor, float y-coor, float angle, float width, float height, float x-scale, float y-scale [, int mode]) Opens a JPEG image
cpdf_lineto(int pdf document, float x-coor, float y-coor [, int mode]) Draws a line
cpdf_moveto(int pdf document, float x-coor, float y-coor [, int mode]) Sets current point
cpdf_newpath(int pdf document) Starts a new path
cpdf_open(int compression [, string filename]) Opens a new pdf document
cpdf_output_buffer(int pdf document) Outputs the pdf document in memory buffer
cpdf_page_init(int pdf document, int page number, int orientation, float height, float width [, float unit]) Starts new page
cpdf_place_inline_image(int pdf document, int image, float x-coor, float y-coor, float angle, float width, float height [, int mode]) Places an image on the page
cpdf_rect(int pdf document, float x-coor, float y-coor, float width, float height [, int mode]) Draw a rectangle
cpdf_restore(int pdf document) Restores formerly saved environment
cpdf_rlineto(int pdf document, float x-coor, float y-coor [, int mode]) Draws a line
cpdf_rmoveto(int pdf document, float x-coor, float y-coor [, int mode]) Sets current point
cpdf_rotate(int pdf document, float angle) Sets rotation
cpdf_rotate_text(int pdfdoc, float angle) Sets text rotation angle
cpdf_save(int pdf document) Saves current environment
cpdf_save_to_file(int pdf document, string filename) Writes the pdf document into a file
cpdf_scale(int pdf document, float x-scale, float y-scale) Sets scaling
cpdf_set_action_url(int pdfdoc, float xll, float yll, float xur, float xur, string url [, int mode]) Sets hyperlink
cpdf_set_creator(string creator) Sets the creator field in the pdf document
cpdf_set_current_page(int pdf document, int page number) Sets current page
cpdf_set_font(int pdf document, string font name, float size, string encoding) Select the current font face and size
cpdf_set_font_directories(int pdfdoc, string pfmdir, string pfbdir) Sets directories to search when using external fonts
cpdf_set_font_map_file(int pdfdoc, string filename) Sets fontname to filename translation map when using external fonts
cpdf_set_horiz_scaling(int pdf document, float scale) Sets horizontal scaling of text
cpdf_set_char_spacing(int pdf document, float space) Sets character spacing
cpdf_set_keywords(string keywords) Sets the keywords field of the pdf document
cpdf_set_leading(int pdf document, float distance) Sets distance between text lines
cpdf_set_page_animation(int pdf document, int transition, float duration) Sets duration between pages
cpdf_set_subject(string subject) Sets the subject field of the pdf document
cpdf_set_text_matrix(int pdf document, array matrix) Sets the text matrix
cpdf_set_text_pos(int pdf document, float x-coor, float y-coor [, int mode]) Sets text position
cpdf_set_text_rendering(int pdf document, int mode) Determines how text is rendered
cpdf_set_text_rise(int pdf document, float value) Sets the text rise
cpdf_set_title(string title) Sets the title field of the pdf document
cpdf_set_viewer_preferences(int pdfdoc, array preferences) How to show the document in the viewer
cpdf_set_word_spacing(int pdf document, float space) Sets spacing between words
cpdf_setdash(int pdf document, float white, float black) Sets dash pattern
cpdf_setflat(int pdf document, float value) Sets flatness
cpdf_setgray(int pdf document, float gray value) Sets drawing and filling color to gray value
cpdf_setgray_fill(int pdf document, float value) Sets filling color to gray value
cpdf_setgray_stroke(int pdf document, float gray value) Sets drawing color to gray value
cpdf_setlinecap(int pdf document, int value) Sets linecap parameter
cpdf_setlinejoin(int pdf document, long value) Sets linejoin parameter
cpdf_setlinewidth(int pdf document, float width) Sets line width
cpdf_setmiterlimit(int pdf document, float value) Sets miter limit
cpdf_setrgbcolor(int pdf document, float red value, float green value, float blue value) Sets drawing and filling color to rgb color value
cpdf_setrgbcolor_fill(int pdf document, float red value, float green value, float blue value) Sets filling color to rgb color value
cpdf_setrgbcolor_stroke(int pdf document, float red value, float green value, float blue value) Sets drawing color to rgb color value
cpdf_show(int pdf document, string text) Output text at current position
cpdf_show_xy(int pdf document, string text, float x-coor, float y-coor [, int mode]) Output text at position
cpdf_stringwidth(int pdf document, string text) Returns width of text in current font
cpdf_stroke(int pdf document) Draw line along path
cpdf_text(int pdf document, string text, float x-coor, float y-coor [, int mode [, float orientation [, int alignmode]]]) Output text with parameters
cpdf_translate(int pdf document, float x-coor, float y-coor [, int mode]) Sets origin of coordinate system
crack_closedict([resource dictionary]) Closes an open CrackLib dictionary
crack_getlastmessage(void) Returns the message from the last obscure check
crack_check([resource dictionary, string password]) Performs an obscure check with the given password
crack_opendict(string dictionary) Opens a new CrackLib dictionary
crc32(string str) Calculates the crc32 polynomial of a string
create_function(string args, string code) Create an anonymous (lambda-style) function
crypt(string str [, string salt]) One-way string encryption (hashing)
ctype_alnum(string text) Check for alphanumeric character(s)
ctype_alpha(string text) Check for alphabetic character(s)
ctype_cntrl(string text) Check for control character(s)
ctype_digit(string text) Check for numeric character(s)
ctype_graph(string text) Check for any printable character(s) except space
ctype_lower(string text) Check for lowercase character(s)
ctype_print(string text) Check for printable character(s)
ctype_punct(string text) Check for any printable character which is not whitespace or an alphanumeric character
ctype_space(string text) Check for whitespace character(s)
ctype_upper(string text) Check for uppercase character(s)
ctype_xdigit(string text) Check for character(s) representing a hexadecimal digit
curl_close(int ch) Close a CURL session
curl_errno(int ch) Return an integer containing the last error number
curl_error(int ch) Return a string containing the last error for the current session
curl_exec(int ch) Perform a CURL session
curl_getinfo(int ch, int opt) Get information regarding a specific transfer
curl_init([string url]) Initialize a CURL session
curl_setopt(int ch, string option, mixed value) Set an option for a CURL transfer
curl_version(void) Return the current CURL version
current(array array) Return the current element in an array
cybercash_base64_decode(string inbuff) base64 decode data for Cybercash
cybercash_base64_encode(string inbuff) base64 encode data for Cybercash
cybercash_decr(string wmk, string sk, string inbuff) Cybercash decrypt
cybercash_encr(string wmk, string sk, string inbuff) Cybercash encrypt
cybermut_creerformulairecm(string url_CM, string version, string TPE, string montant, string ref_commande, string texte_libre, string url_retour, string url_retour_ok, string url_retour_err, string langue, string code_societe, string texte_bouton) Generate HTML form of request for payment
cybermut_creerreponsecm(string phrase) Generate the acknowledgement of delivery of the confirmation of payment
cybermut_testmac(string code_MAC, string version, string TPE, string cdate, string montant, string ref_commande, string texte_libre, string code-retour) Make sure that there no was data diddling contained in the received message of confirmation
cyrus_authenticate(resource connection [, string mechlist [, string service [, string user [, int minssf [, int maxssf]]]]]) Authenticate agaings a Cyrus IMAP server
cyrus_bind(resource connection, array callbacks) Bind callbacks to a Cyrus IMAP connection
cyrus_close(resource connection) Close connection to a cyrus server
cyrus_connect([string host [, string port [, int flags]]]) Connect to a Cyrus IMAP server
cyrus_query(resource connection, string query) Send a query to a Cyrus IMAP server
cyrus_unbind(resource connection, string trigger_name) Unbind ...
date(string format [, int timestamp]) Format a local time/date
dba_close(int handle) Close database
dba_delete(string key, int handle) Delete entry specified by key
dba_exists(string key, int handle) Check whether key exists
dba_fetch(string key, int handle) Fetch data specified by key
dba_firstkey(int handle) Fetch first key
dba_insert(string key, string value, int handle) Insert entry
dba_nextkey(int handle) Fetch next key
dba_open(string path, string mode, string handler [, ...]) Open database
dba_optimize(int handle) Optimize database
dba_popen(string path, string mode, string handler [, ...]) Open database persistently
dba_replace(string key, string value, int handle) Replace or insert entry
dba_sync(int handle) Synchronize database
dbase_add_record(int dbase_identifier, array record) Add a record to a dBase database
dbase_close(int dbase_identifier) Close a dBase database
dbase_create(string filename, array fields) Creates a dBase database
dbase_delete_record(int dbase_identifier, int record) Deletes a record from a dBase database
dbase_get_record(int dbase_identifier, int record) Gets a record from a dBase database
dbase_get_record_with_names(int dbase_identifier, int record) Gets a record from a dBase database as an associative array
dbase_numfields(int dbase_identifier) Find out how many fields are in a dBase database
dbase_numrecords(int dbase_identifier) Find out how many records are in a dBase database
dbase_open(string filename, int flags) Opens a dBase database
dbase_pack(int dbase_identifier) Packs a dBase database
dbase_replace_record(int dbase_identifier, array record, int dbase_record_number) Replace a record in a dBase database
dblist(void) Describes the DBM-compatible library being used
dbmclose(int dbm_identifier) Closes a dbm database
dbmdelete(int dbm_identifier, string key) Deletes the value for a key from a DBM database
dbmexists(int dbm_identifier, string key) Tells if a value exists for a key in a DBM database
dbmfetch(int dbm_identifier, string key) Fetches a value for a key from a DBM database
dbmfirstkey(int dbm_identifier) Retrieves the first key from a DBM database
dbminsert(int dbm_identifier, string key, string value) Inserts a value for a key in a DBM database
dbmnextkey(int dbm_identifier, string key) Retrieves the next key from a DBM database
dbmopen(string filename, string flags) Opens a DBM database
dbmreplace(int dbm_identifier, string key, string value) Replaces the value for a key in a DBM database
dbplus_add(resource relation, array tuple) Add a tuple to a relation
dbplus_aql(string query [, string server [, string dbpath]]) Perform AQL query
dbplus_close(resource relation) Close a relation
dbplus_curr(resource relation, array tuple) Get current tuple from relation
dbplus_errcode(int errno) Get error string for given errorcode or last error
dbplus_errno(void) Get error code for last operation
dbplus_find(resource relation, array constraints, mixed tuple) Set a constraint on a relation
dbplus_first(resource relation, array tuple) Get first tuple from relation
dbplus_flush(resource relation) Flush all changes made on a relation
dbplus_freealllocks(void) Free all locks held by this client
dbplus_freelock(resource relation, string tname) Release write lock on tuple
dbplus_freerlocks(resource relation) Free all tuple locks on given relation
dbplus_getlock(resource relation, string tname) Get a write lock on a tuple
dbplus_getunique(resource relation, int uniqueid) Get a id number unique to a relation
dbplus_chdir([string newdir]) Get/Set database virtual current directory
dbplus_info(resource relation, string key, array ) ???
dbplus_last(resource relation, array tuple) Get last tuple from relation
dbplus_lockrel(resource relation) Request write lock on relation
dbplus_next(resource relation, array ) Get next tuple from relation
dbplus_open(string name) Open relation file
dbplus_prev(resource relation, array tuple) Get previous tuple from relation
dbplus_rcreate(string name, mixed domlist [, boolean overwrite]) Creates a new DB++ relation
dbplus_rcrtexact(string name, resource relation, boolean overwrite) Creates an exact but empty copy of a relation including indices
dbplus_rcrtlike(string name, resource relation, int flag) Creates an empty copy of a relation with default indices
dbplus_resolve(string relation_name) Resolve host information for relation
dbplus_restorepos(resource relation, array tuple) ???
dbplus_rchperm(resource relation, int mask, string user, string group) Change relation permissions
dbplus_rkeys(resource relation, mixed domlist) Specify new primary key for a relation
dbplus_ropen(string name) Open relation file local
dbplus_rquery(string query, string dbpath) Perform local (raw) AQL query
dbplus_rrename(resource relation, string name) Rename a relation
dbplus_rsecindex(resource relation, mixed domlist, int type) Create a new secondary index for a relation
dbplus_runlink(resource relation) Remove relation from filesystem
dbplus_rzap(resource relation) Remove all tuples from relation
dbplus_savepos(resource relation) ???
dbplus_setindex(resource relation, string idx_name) ???
dbplus_setindexbynumber(resource relation, int idx_number) ???
dbplus_sql(string query, string server, string dbpath) Perform SQL query
dbplus_tcl(int sid, string script) Execute TCL code on server side
dbplus_tremove(resource relation, array tuple [, array current]) Remove tuple and return new current tuple
dbplus_undo(resource relation) ???
dbplus_undoprepare(resource relation) ???
dbplus_unlockrel(resource relation) Give up write lock on relation
dbplus_unselect(resource relation) Remove a constraint from relation
dbplus_update(resource relation, array old, array new) Update specified tuple in relation
dbplus_xlockrel(resource relation) Request exclusive lock on relation
dbplus_xunlockrel(resource relation) Free exclusive lock on relation
dbx_close(object link_identifier) Close an open connection/database
dbx_compare(array row_a, array row_b, string column_key [, int flags]) Compare two rows for sorting purposes
dbx_connect(mixed module, string host, string database, string username, string password [, int persistent]) Open a connection/database
dbx_error(object link_identifier) Report the error message of the latest function call in the module (not just in the connection)
dbx_query(object link_identifier, string sql_statement [, long flags]) Send a query and fetch all results (if any)
dbx_sort(object result, string user_compare_function) Sort a result from a dbx_query by a custom sort function
dcgettext(string domain, string message, int category) Overrides the domain for a single lookup
dcngettext(string domain, string msgid1, string msgid2, int n, int category) Plural version of dcgettext
debugger_off(void) Disable internal PHP debugger
debugger_on(string address) Enable internal PHP debugger
decbin(int number) Decimal to binary
decoct(int number) Decimal to octal
define(string name, mixed value [, bool case_insensitive]) Defines a named constant.
define_syslog_variables(void) Initializes all syslog related constants
defined(string name) Checks whether a given named constant exists
deg2rad(float number) Converts the number in degrees to the radian equivalent
dechex(int number) Decimal to hexadecimal
delete(string file) A dummy manual entry
dgettext(string domain, string message) Override the current domain
die(?) Alias of exit()
dio_close(resource fd) Closes the file descriptor given by fd
dio_fcntl(resource fd, int cmd [, mixed arg]) Performs a c library fcntl on fd
dio_open(string filename, int flags [, int mode]) Opens a new filename with specified permissions of flags and creation permissions of mode
dio_read(resource fd [, int n]) Reads n bytes from fd and returns them, if n is not specified, reads 1k block
dio_seek(resource fd, int pos, int whence) Seeks to pos on fd from whence
dio_stat(resource fd) Gets stat information about the file descriptor fd
dio_truncate(resource fd, int offset) Truncates file descriptor fd to offset bytes
dio_write(resource fd, string data [, int len]) Writes data to fd with optional truncation at length
dirname(string path) Returns directory name component of path
disk_free_space(string directory) Returns available space in directory
disk_total_space(string directory) Returns the total size of a directory
diskfreespace(string directory) Alias of disk_free_space()
dl(string library) Loads a PHP extension at runtime
dngettext(string domain, string msgid1, string msgid2, int n) Plural version of dgettext
DomAttribute->name(void) Returns name of attribute
DomAttribute->specified(void) Checks if attribute is specified
DomAttribute->value(void) Returns value of attribute
DomDocument->create_attribute(string name, string value) Create new attribute
DomDocument->create_cdata_section(string content) Create new cdata node
DomDocument->create_comment(string content) Create new comment node
DomDocument->create_element(string name) Create new element node
DomDocument->create_entity_reference(string content) 
DomDocument->create_processing_instruction(string content) Creates new PI node
DomDocument->create_text_node(string content) Create new text node
DomDocument->doctype(void) Returns the document type
DomDocument->document_element(void) Returns root element node
DomDocument->dump_file(string filename [, bool compressionmode [, bool format]]) Dumps the internal XML tree back into a file
DomDocument->dump_mem([bool format]) Dumps the internal XML tree back into a string
DomDocument->get_element_by_id(string id) Searches for an element with a certain id
DomDocument->get_elements_by_tagname(string name) 
DomDocument->html_dump_mem(void) Dumps the internal XML tree back into a string as HTML
DomDocumentType->entities(void) Returns list of entities
DomDocumentType->internal_subset(void) Returns internal subset
DomDocumentType->name(void) Returns name of document type
DomDocumentType->notations(void) Returns list of notations
DomDocumentType->public_id(void) Returns public id of document type
DomDocumentType->system_id(void) Returns system id of document type
DomElement->get_attribute(string name) Returns value of attribute
DomElement->get_attribute_node(object attr) Returns value of attribute
DomElement->get_elements_by_tagname(string name) Adds new attribute
DomElement->has_attribute(string name) Adds new attribute
DomElement->remove_attribute(string name) Adds new attribute
DomElement->set_attribute(string name, string value) Adds new attribute
DomElement->set_attribute_node(object attr) Adds new attribute
DomElement->tagname(void) Returns name of element
DomNode->append_child(object newnode) Adds new child at the end of the children
DomNode->append_sibling(object newnode) Adds new sibling to a node
DomNode->attributes(void) Returns list of attributes
DomNode->clone_node(void) Clones a node
DomNode->dump_node(void) Dumps a single node
DomNode->first_child(void) Returns first child of node
DomNode->get_content(void) Gets content of node
DomNode->has_child_nodes(void) Checks if node has children
DomNode->insert_before(object newnode, object refnode) Inserts new node as child
DomNode->is_blank_node(void) Checks if node is blank
DomNode->last_child(void) Returns last child of node
DomNode->next_sibling(void) Returns the next sibling of node
DomNode->node_name(void) Returns name of node
DomNode->node_type(void) Returns type of node
DomNode->node_value(void) Returns value of a node
DomNode->owner_document(void) Returns the document this node belongs to
DomNode->parent_node(void) Returns the parent of the node
DomNode->prefix(void) Returns name space prefix of node
DomNode->previous_sibling(void) Returns the previous sibling of node
DomNode->remove_child(object oldchild) Removes child from list of children
DomNode->replace_child(object oldnode, object newnode) Replaces a child
DomNode->replace_node(object newnode) Replaces node
DomNode->set_content(void) Sets content of node
DomNode->set_name(void) Sets name of node
DomNode->unlink_node(void) Deletes node
DomProcessingInstruction->data(void) Returns data of pi node
DomProcessingInstruction->target(void) Returns target of pi node
domxml_new_doc(string version) Creates new empty XML document
domxml_open_file(string filename) Creates a DOM object from XML file
domxml_open_mem(string str) Creates a DOM object of an XML document
domxml_version(void) Get XML library version
domxml_xmltree(string str) Creates a tree of PHP objects from an XML document
dotnet_load(string assembly_name [, string datatype_name [, int codepage]]) Loads a DOTNET module
doubleval(?) Alias of floatval()
each(array array) Return the current key and value pair from an array and advance the array cursor
easter_date(int year) Get UNIX timestamp for midnight on Easter of a given year
easter_days(int year) Get number of days after March 21 on which Easter falls for a given year
ebcdic2ascii(string ebcdic_str) Translate string from EBCDIC to ASCII
echo(string arg1 [, string argn...]) Output one or more strings
empty(mixed var) Determine whether a variable is set
end(array array) Set the internal pointer of an array to its last element
ereg(string pattern, string string [, array regs]) Regular expression match
ereg_replace(string pattern, string replacement, string string) Replace regular expression
eregi(string pattern, string string [, array regs]) case insensitive regular expression match
eregi_replace(string pattern, string replacement, string string) replace regular expression case insensitive
error_log(string message [, int message_type [, string destination [, string extra_headers]]]) send an error message somewhere
error_reporting([int level]) set which PHP errors are reported
escapeshellarg(string arg) escape a string to be used as a shell argument
escapeshellcmd(string command) escape shell metacharacters
eval(string code_str) Evaluate a string as PHP code
exec(string command [, string array [, int return_var]]) Execute an external program
exif_imagetype(string filename) Determine the type of an image
exif_read_data(string filename [, string sections [, bool arrays [, bool thumbnail]]]) Read the EXIF headers from JPEG or TIFF
exif_thumbnail(string filename [, int &width [, int &height]]) Retrieve the embedded thumbnail of a TIFF or JPEG image
exit([string status]) Output a message and terminate the current script
exp(float arg) e to the power of ...
explode(string separator, string string [, int limit]) Split a string by string
expm1(float number) Returns exp(number) - 1, computed in a way that accurate even when the value of number is close to zero
extension_loaded(string name) Find out whether an extension is loaded
extract(array var_array [, int extract_type [, string prefix]]) Import variables into the current symbol table from an array
ezmlm_hash(string addr) Calculate the hash value needed by EZMLM
fbsql_affected_rows([int link_identifier]) Get number of affected rows in previous FrontBase operation
fbsql_autocommit(resource link_identifier [, bool OnOff]) Enable or disable autocommit
fbsql_close([resource link_identifier]) Close FrontBase connection
fbsql_commit([resource link_identifier]) Commits a transaction to the database
fbsql_connect([string hostname [, string username [, string password]]]) Open a connection to a FrontBase Server
fbsql_create_blob(string blob_data [, resource link_identifier]) Create a BLOB
fbsql_create_clob(string clob_data [, resource link_identifier]) Create a CLOB
fbsql_create_db(string database name [, resource link_identifier]) Create a FrontBase database
fbsql_data_seek(resource result_identifier, int row_number) Move internal result pointer
fbsql_database(resource link_identifier [, string database]) Get or set the database name used with a connection
fbsql_database_password(resource link_identifier [, string database_password]) Sets or retrieves the password for a FrontBase database
fbsql_db_query(string database, string query [, resource link_identifier]) Send a FrontBase query
fbsql_db_status(string database_name [, resource link_identifier]) Get the status for a given database
fbsql_drop_db(string database_name [, resource link_identifier]) Drop (delete) a FrontBase database
fbsql_errno([resource link_identifier]) Returns the numerical value of the error message from previous FrontBase operation
fbsql_error([resource link_identifier]) Returns the text of the error message from previous FrontBase operation
fbsql_fetch_array(resource result [, int result_type]) Fetch a result row as an associative array, a numeric array, or both
fbsql_fetch_assoc(resource result) Fetch a result row as an associative array
fbsql_fetch_field(resource result [, int field_offset]) Get column information from a result and return as an object
fbsql_fetch_lengths([resource result]) Get the length of each output in a result
fbsql_fetch_object(resource result [, int result_type]) Fetch a result row as an object
fbsql_fetch_row(resource result) Get a result row as an enumerated array
fbsql_field_flags(resource result, int field_offset) Get the flags associated with the specified field in a result
fbsql_field_len(resource result, int field_offset) Returns the length of the specified field
fbsql_field_name(resource result, int field_index) Get the name of the specified field in a result
fbsql_field_seek(resource result, int field_offset) Set result pointer to a specified field offset
fbsql_field_table(resource result, int field_offset) Get name of the table the specified field is in
fbsql_field_type(resource result, int field_offset) Get the type of the specified field in a result
fbsql_free_result(int result) Free result memory
fbsql_get_autostart_info([resource link_identifier]) No description given yet
fbsql_hostname(resource link_identifier [, string host_name]) Get or set the host name used with a connection
fbsql_change_user(string user, string password [, string database [, int link_identifier]]) Change logged in user of the active connection
fbsql_insert_id([resource link_identifier]) Get the id generated from the previous INSERT operation
fbsql_list_dbs([resource link_identifier]) List databases available on a FrontBase server
fbsql_list_fields(string database_name, string table_name [, resource link_identifier]) List FrontBase result fields
fbsql_list_tables(string database [, resource link_identifier]) List tables in a FrontBase database
fbsql_next_result(int result_id) Move the internal result pointer to the next result
fbsql_num_fields(resource result) Get number of fields in result
fbsql_num_rows(resource result) Get number of rows in result
fbsql_password(resource link_identifier [, string password]) Get or set the user password used with a connection
fbsql_pconnect([string hostname [, string username [, string password]]]) Open a persistent connection to a FrontBase Server
fbsql_query(string query [, resource link_identifier]) Send a FrontBase query
fbsql_read_blob(string blob_handle [, resource link_identifier]) Read a BLOB from the database
fbsql_read_clob(string clob_handle [, resource link_identifier]) Read a CLOB from the database
fbsql_result(resource result, int row [, mixed field]) Get result data
fbsql_rollback([resource link_identifier]) Rollback a transaction to the database
fbsql_select_db(string database_name [, resource link_identifier]) Select a FrontBase database
fbsql_set_lob_mode(resource result, string database_name) Set the LOB retrieve mode for a FrontBase result set
fbsql_set_transaction(resource link_identifier, int Locking, int Isolation) Set the transaction locking and isolation
fbsql_start_db(string database_name [, resource link_identifier]) Start a database on local or remote server
fbsql_stop_db(string database_name [, resource link_identifier]) Stop a database on local or remote server
fbsql_tablename(resource result, int i) Get table name of field
fbsql_username(resource link_identifier [, string username]) Get or set the host user used with a connection
fbsql_warnings([bool OnOff]) Enable or disable FrontBase warnings
fclose(int fp) Closes an open file pointer
fdf_add_template(int fdfdoc, int newpage, string filename, string template, int rename) Adds a template into the FDF document
fdf_close(int fdf_document) Close an FDF document
fdf_create(void) Create a new FDF document
fdf_get_file(int fdf_document) Get the value of the /F key
fdf_get_status(int fdf_document) Get the value of the /STATUS key
fdf_get_value(int fdf_document, string fieldname) Get the value of a field
fdf_next_field_name(int fdf_document [, string fieldname]) Get the next field name
fdf_open(string filename) Open a FDF document
fdf_save(string filename) Save a FDF document
fdf_set_ap(int fdf_document, string field_name, int face, string filename, int page_number) Set the appearance of a field
fdf_set_encoding(int fdf_document, string encoding) Sets FDF character encoding
fdf_set_file(int fdf_document, string filename) Set the value of the /F key
fdf_set_flags(int fdf_document, string fieldname, int whichFlags, int newFlags) Sets a flag of a field
fdf_set_javascript_action(int fdf_document, string fieldname, int trigger, string script) Sets an javascript action of a field
fdf_set_opt(int fdf_document, string fieldname, int element, string str1, string str2) Sets an option of a field
fdf_set_status(int fdf_document, string status) Set the value of the /STATUS key
fdf_set_submit_form_action(int fdf_document, string fieldname, int trigger, string script, int flags) Sets a submit form action of a field
fdf_set_value(int fdf_document, string fieldname, string value, int isName) Set the value of a field
feof(int fp) Tests for end-of-file on a file pointer
fflush(int fp) Flushes the output to a file
fgetc(int fp) Gets character from file pointer
fgetcsv(int fp, int length [, string delimiter]) Gets line from file pointer and parse for CSV fields
fgets(int fp [, int length]) Gets line from file pointer
fgetss(int fp, int length [, string allowable_tags]) Gets line from file pointer and strip HTML tags
file(string filename [, int use_include_path]) Reads entire file into an array
file_exists(string filename) Checks whether a file exists
file_get_contents(string filename [, int use_include_path]) Reads entire file into a string
file_get_wrapper_data(int fp) Retrieves header/meta data from "wrapped" file pointers
file_register_wrapper(string protocol, string classname) Register a URL wrapper implemented as a PHP class
fileatime(string filename) Gets last access time of file
filectime(string filename) Gets inode change time of file
filegroup(string filename) Gets file group
fileinode(string filename) Gets file inode
filemtime(string filename) Gets file modification time
fileowner(string filename) Gets file owner
fileperms(string filename) Gets file permissions
filepro(string directory) Read and verify the map file
filepro_fieldcount(void) Find out how many fields are in a filePro database
filepro_fieldname(int field_number) Gets the name of a field
filepro_fieldtype(int field_number) Gets the type of a field
filepro_fieldwidth(int field_number) Gets the width of a field
filepro_retrieve(int row_number, int field_number) Retrieves data from a filePro database
filepro_rowcount(void) Find out how many rows are in a filePro database
filesize(string filename) Gets file size
filetype(string filename) Gets file type
floatval(mixed var) Get float value of a variable
flock(int fp, int operation [, int wouldblock]) Portable advisory file locking
floor(float value) Round fractions down
flush(void) Flush the output buffer
fopen(string filename, string mode [, int use_include_path]) Opens file or URL
fpassthru(int fp) Output all remaining data on a file pointer
fputs(int fp, string str [, int length]) Writes to a file pointer
fread(int fp, int length) Binary-safe file read
FrenchToJD(int month, int day, int year) Converts a date from the French Republican Calendar to a Julian Day Count
fribidi_log2vis(string str, string direction, int charset) Convert a logical string to a visual one
fscanf(int handle, string format [, string var1]) Parses input from a file according to a format
fseek(int fp, int offset [, int whence]) Seeks on a file pointer
fsockopen(string hostname, int port [, int errno [, string errstr [, float timeout]]]) Open Internet or Unix domain socket connection
fstat(int fp) Gets information about a file using an open file pointer
ftell(int fp) Tells file pointer read/write position
ftok(string pathname, string proj) Convert a pathname and a project identifier to a System V IPC key
ftp_cdup(resource ftp_stream) Changes to the parent directory
ftp_close(resource ftp_stream) Closes an FTP connection
ftp_connect(string host [, int port [, int timeout]]) Opens up an FTP connection
ftp_delete(resource ftp_stream, string path) Deletes a file on the FTP server
ftp_exec(resource stream, string command) Request execution of a program on the FTP server
ftp_fget(resource ftp_stream, resource fp, string remote_file, int mode) Downloads a file from the FTP server and saves to an open file
ftp_fput(resource ftp_stream, string remote_file, resource fp, int mode) Uploads from an open file to the FTP server
ftp_get(resource ftp_stream, string local_file, string remote_file, int mode) Downloads a file from the FTP server
ftp_get_option(resource stream, int option) Retrieves various runtime behaviours of the current FTP stream
ftp_chdir(resource ftp_stream, string directory) Changes directories on a FTP server
ftp_login(resource ftp_stream, string username, string password) Logs in an FTP connection
ftp_mdtm(resource ftp_stream, string remote_file) Returns the last modified time of the given file
ftp_mkdir(resource ftp_stream, string directory) Creates a directory
ftp_nlist(resource ftp_stream, string directory) Returns a list of files in the given directory
ftp_pasv(resource ftp_stream, bool pasv) Turns passive mode on or off
ftp_put(resource ftp_stream, string remote_file, string local_file, int mode) Uploads a file to the FTP server
ftp_pwd(resource ftp_stream) Returns the current directory name
ftp_quit(resource ftp_stream) Closes an FTP connection
ftp_rawlist(resource ftp_stream, string directory) Returns a detailed list of files in the given directory
ftp_rename(resource ftp_stream, string from, string to) Renames a file on the FTP server
ftp_rmdir(resource ftp_stream, string directory) Removes a directory
ftp_set_option(resource stream, int option, mixed value) Set miscellaneous runtime FTP options
ftp_site(resource ftp_stream, string cmd) Sends a SITE command to the server
ftp_size(resource ftp_stream, string remote_file) Returns the size of the given file
ftp_systype(resource ftp_stream) Returns the system type identifier of the remote FTP server
ftruncate(int fp, int size) Truncates a file to a given length
func_get_arg(int arg_num) Return an item from the argument list
func_get_args(void) Returns an array comprising a function's argument list
func_num_args(void) Returns the number of arguments passed to the function
function_exists(string function_name) Return TRUE if the given function has been defined
fwrite(int fp, string string [, int length]) Binary-safe file write
get_browser([string user_agent]) Tells what the user's browser is capable of
get_cfg_var(string varname) Gets the value of a PHP configuration option
get_class(object obj) Returns the name of the class of an object
get_class_methods(mixed class_name) Returns an array of class methods' names
get_class_vars(string class_name) Returns an array of default properties of the class
get_current_user(void) Gets the name of the owner of the current PHP script
get_declared_classes(void) Returns an array with the name of the defined classes
get_defined_constants(void) Returns an associative array with the names of all the constants and their values
get_defined_functions(void) Returns an array of all defined functions
get_defined_vars(void) Returns an array of all defined variables
get_extension_funcs(string module_name) Returns an array with the names of the functions of a module
get_html_translation_table(int table [, int quote_style]) Returns the translation table used by htmlspecialchars() and htmlentities()
get_included_files(void) Returns an array with the names of included or required files
get_loaded_extensions(void) Returns an array with the names of all modules compiled and loaded
get_magic_quotes_gpc(void) Gets the current active configuration setting of magic quotes gpc
get_magic_quotes_runtime(void) Gets the current active configuration setting of magic_quotes_runtime
get_meta_tags(string filename [, int use_include_path]) Extracts all meta tag content attributes from a file and returns an array
get_object_vars(object obj) Returns an associative array of object properties
get_parent_class(mixed obj) Retrieves the parent class name for object or class
get_required_files(void) Returns an array with the names of included or required files
get_resource_type(resource handle) Returns the resource type
getallheaders(void) Fetch all HTTP request headers
getcwd(void) gets the current working directory
getdate([int timestamp]) Get date/time information
getenv(string varname) Gets the value of an environment variable
gethostbyaddr(string ip_address) Get the Internet host name corresponding to a given IP address
gethostbyname(string hostname) Get the IP address corresponding to a given Internet host name
gethostbynamel(string hostname) Get a list of IP addresses corresponding to a given Internet host name
getimagesize(string filename [, array imageinfo]) Get the size of an image
getlastmod(void) Gets time of last page modification
getmxrr(string hostname, array mxhosts [, array weight]) Get MX records corresponding to a given Internet host name
getmygid(void) Get PHP script owner's GID
getmyinode(void) Gets the inode of the current script
getmypid(void) Gets PHP's process ID
getmyuid(void) Gets PHP script owner's UID
getprotobyname(string name) Get protocol number associated with protocol name
getprotobynumber(int number) Get protocol name associated with protocol number
getrandmax(void) Show largest possible random value
getrusage([int who]) Gets the current resource usages
getservbyname(string service, string protocol) Get port number associated with an Internet service and protocol
getservbyport(int port, string protocol) Get Internet service which corresponds to port and protocol
gettext(string message) Lookup a message in the current domain
gettimeofday(void) Get current time
gettype(mixed var) Get the type of a variable
gmdate(string format [, int timestamp]) Format a GMT/CUT date/time
gmmktime(int hour, int minute, int second, int month, int day, int year [, int is_dst]) Get UNIX timestamp for a GMT date
gmp_abs(resource a) Absolute value
gmp_add(resource a, resource b) Add numbers
gmp_and(resource a, resource b) Logical AND
gmp_clrbit(resource &a, int index) Clear bit
gmp_cmp(resource a, resource b) Compare numbers
gmp_com(resource a) Calculates one's complement of a
gmp_div(resource a, resource b) Divide numbers
gmp_div_q(resource a, resource b [, int round]) Divide numbers
gmp_div_qr(resource n, resource d [, int round]) Divide numbers and get quotient and remainder
gmp_div_r(resource n, resource d [, int round]) Remainder of the division of numbers
gmp_divexact(resource n, resource d) Exact division of numbers
gmp_fact(int a) Factorial
gmp_gcd(resource a, resource b) Calculate GCD
gmp_gcdext(resource a, resource b) Calculate GCD and multipliers
gmp_hamdist(resource a, resource b) Hamming distance
gmp_init(mixed number) Create GMP number
gmp_intval(resource gmpnumber) Convert GMP number to integer
gmp_invert(resource a, resource b) Inverse by modulo
gmp_jacobi(resource a, resource p) Jacobi symbol
gmp_legendre(resource a, resource p) Legendre symbol
gmp_mod(resource n, resource d) Modulo operation
gmp_mul(resource a, resource b) Multiply numbers
gmp_neg(resource a) Negate number
gmp_or(resource a, resource b) Logical OR
gmp_perfect_square(resource a) Perfect square check
gmp_popcount(resource a) Population count
gmp_pow(resource base, int exp) Raise number into power
gmp_powm(resource base, resource exp, resource mod) Raise number into power with modulo
gmp_prob_prime(resource a [, int reps]) Check if number is "probably prime"
gmp_random(int limiter) Random number
gmp_scan0(resource a, int start) Scan for 0
gmp_scan1(resource a, int start) Scan for 1
gmp_setbit(resource &a, int index [, bool set_clear]) Set bit
gmp_sign(resource a) Sign of number
gmp_sqrt(resource a) Square root
gmp_strval(resource gmpnumber [, int base]) Convert GMP number to string
gmp_sub(resource a, resource b) Subtract numbers
gmp_xor(resource a, resource b) Logical XOR
gmstrftime(string format [, int timestamp]) Format a GMT/CUT time/date according to locale settings
GregorianToJD(int month, int day, int year) Converts a Gregorian date to Julian Day Count
gzclose(int zp) Close an open gz-file pointer
gzcompress(string data [, int level]) Compress a string
gzdeflate(string data [, int level]) Deflate a string
gzencode(string data [, int level [, int encoding_mode]]) Create a gzip compressed string
gzeof(int zp) Test for end-of-file on a gz-file pointer
gzfile(string filename [, int use_include_path]) Read entire gz-file into an array
gzgetc(int zp) Get character from gz-file pointer
gzgets(int zp, int length) Get line from file pointer
gzgetss(int zp, int length [, string allowable_tags]) Get line from gz-file pointer and strip HTML tags
gzinflate(string data [, int length]) Inflate a deflated string
gzopen(string filename, string mode [, int use_include_path]) Open gz-file
gzpassthru(int zp) Output all remaining data on a gz-file pointer
gzputs(int zp, string str [, int length]) Write to a gz-file pointer
gzread(int zp, int length) Binary-safe gz-file read
gzrewind(int zp) Rewind the position of a gz-file pointer
gzseek(int zp, int offset) Seek on a gz-file pointer
gztell(int zp) Tell gz-file pointer read/write position
gzuncompress(string data [, int length]) Uncompress a deflated string
gzwrite(int zp, string string [, int length]) Binary-safe gz-file write
header(string string [, bool replace]) Send a raw HTTP header
headers_sent(void) Returns TRUE if headers have been sent
hebrev(string hebrew_text [, int max_chars_per_line]) Convert logical Hebrew text to visual text
hebrevc(string hebrew_text [, int max_chars_per_line]) Convert logical Hebrew text to visual text with newline conversion
hexdec(string hex_string) Hexadecimal to decimal
highlight_file(string filename [, bool return]) Syntax highlighting of a file
highlight_string(string str [, bool return]) Syntax highlighting of a string
htmlentities(string string [, int quote_style [, string charset]]) Convert all applicable characters to HTML entities
htmlspecialchars(string string [, int quote_style [, string charset]]) Convert special characters to HTML entities
hw_Array2Objrec(array object_array) convert attributes from object array to object record
hw_Close(int connection) closes the Hyperwave connection
hw_Connect(string host, int port, string username, string password) opens a connection
hw_connection_info(int link) Prints information about the connection to Hyperwave server
hw_Cp(int connection, array object_id_array, int destination id) copies objects
hw_Deleteobject(int connection, int object_to_delete) deletes object
hw_DocByAnchor(int connection, int anchorID) object id object belonging to anchor
hw_DocByAnchorObj(int connection, int anchorID) object record object belonging to anchor
hw_Document_Attributes(int hw_document) object record of hw_document
hw_Document_BodyTag(int hw_document) body tag of hw_document
hw_Document_Content(int hw_document) returns content of hw_document
hw_Document_SetContent(int hw_document, string content) sets/replaces content of hw_document
hw_Document_Size(int hw_document) size of hw_document
hw_dummy(int link, int id, int msgid) Hyperwave dummy function
hw_EditText(int connection, int hw_document) retrieve text document
hw_Error(int connection) error number
hw_ErrorMsg(int connection) returns error message
hw_Free_Document(int hw_document) frees hw_document
hw_GetAndLock(int connection, int objectID) return bject record and lock object
hw_GetAnchors(int connection, int objectID) object ids of anchors of document
hw_GetAnchorsObj(int connection, int objectID) object records of anchors of document
hw_GetChildColl(int connection, int objectID) object ids of child collections
hw_GetChildCollObj(int connection, int objectID) object records of child collections
hw_GetChildDocColl(int connection, int objectID) object ids of child documents of collection
hw_GetChildDocCollObj(int connection, int objectID) object records of child documents of collection
hw_GetObject(int connection, [int|array] objectID, string query) object record
hw_GetObjectByQuery(int connection, string query, int max_hits) search object
hw_GetObjectByQueryColl(int connection, int objectID, string query, int max_hits) search object in collection
hw_GetObjectByQueryCollObj(int connection, int objectID, string query, int max_hits) search object in collection
hw_GetObjectByQueryObj(int connection, string query, int max_hits) search object
hw_GetParents(int connection, int objectID) object ids of parents
hw_GetParentsObj(int connection, int objectID) object records of parents
hw_getrellink(int link, int rootid, int sourceid, int destid) Get link from source to dest relative to rootid
hw_GetRemote(int connection, int objectID) Gets a remote document
hw_GetRemoteChildren(int connection, string object record) Gets children of remote document
hw_GetSrcByDestObj(int connection, int objectID) Returns anchors pointing at object
hw_GetText(int connection, int objectID [, mixed rootID/prefix]) retrieve text document
hw_getusername(int connection) name of currently logged in user
hw_changeobject(int link, int objid, array attributes) Changes attributes of an object (obsolete)
hw_Children(int connection, int objectID) object ids of children
hw_ChildrenObj(int connection, int objectID) object records of children
hw_Identify(string username, string password) identifies as user
hw_InCollections(int connection, array object_id_array, array collection_id_array, int return_collections) check if object ids in collections
hw_Info(int connection) info about connection
hw_InsColl(int connection, int objectID, array object_array) insert collection
hw_InsDoc(int connection, int parentID, string object_record, string text) insert document
hw_insertanchors(int hwdoc, array anchorecs, array dest [, array urlprefixes]) Inserts only anchors into text
hw_InsertDocument(int connection, int parent_id, int hw_document) upload any document
hw_InsertObject(int connection, string object rec, string parameter) inserts an object record
hw_mapid(int connection, int server id, int object id) Maps global id on virtual local id
hw_Modifyobject(int connection, int object_to_change, array remove, array add, int mode) modifies object record
hw_Mv(int connection, array object id array, int source id, int destination id) moves objects
hw_New_Document(string object_record, string document_data, int document_size) create new document
hw_Objrec2Array(string object_record [, array format]) convert attributes from object record to object array
hw_Output_Document(int hw_document) prints hw_document
hw_pConnect(string host, int port, string username, string password) make a persistent database connection
hw_PipeDocument(int connection, int objectID) retrieve any document
hw_Root() root object id
hw_setlinkroot(int link, int rootid) Set the id to which links are calculated
hw_stat(int link) Returns status string
hw_Unlock(int connection, int objectID) unlock object
hw_Who(int connection) List of currently logged in users
hwapi_hgcsp(string hostname [, int port]) Returns object of class hw_api
hypot(float num1, float num2) Returns sqrt( num1*num1 + num2*num2)
chdir(string directory) change directory
checkdate(int month, int day, int year) Validate a gregorian date/time
checkdnsrr(string host [, string type]) Check DNS records corresponding to a given Internet host name or IP address
chgrp(string filename, mixed group) Changes file group
chmod(string filename, int mode) Changes file mode
chop(?) Alias of rtrim()
chown(string filename, mixed user) Changes file owner
chr(int ascii) Return a specific character
chroot(string directory) change the root directory
chunk_split(string body [, int chunklen [, string end]]) Split a string into smaller chunks
ibase_blob_add(int blob_id, string data) Add data into created blob
ibase_blob_cancel(int blob_id) Cancel creating blob
ibase_blob_close(int blob_id) Close blob
ibase_blob_create([int link_identifier]) Create blob for adding data
ibase_blob_echo(string blob_id_str) Output blob contents to browser
ibase_blob_get(int blob_id, int len) Get len bytes data from open blob
ibase_blob_import([int link_identifier, int file_id]) Create blob, copy file in it, and close it
ibase_blob_info(string blob_id_str) Return blob length and other useful info
ibase_blob_open(string blob_id) Open blob for retrieving data parts
ibase_close([int connection_id]) Close a connection to an InterBase database
ibase_commit([int link_identifier, int trans_number]) Commit a transaction
ibase_connect(string database [, string username [, string password [, string charset [, int buffers [, int dialect [, string role]]]]]]) Open a connection to an InterBase database
ibase_errmsg(void) Returns error messages
ibase_execute(int query [, int bind_args]) Execute a previously prepared query
ibase_fetch_object(int result_id) Get an object from a InterBase database
ibase_fetch_row(int result_identifier) Fetch a row from an InterBase database
ibase_field_info(int result, int field number) Get information about a field
ibase_free_query(int query) Free memory allocated by a prepared query
ibase_free_result(int result_identifier) Free a result set
ibase_num_fields(int result_id) Get the number of fields in a result set
ibase_pconnect(string database [, string username [, string password [, string charset [, int buffers [, int dialect [, string role]]]]]]) Creates an persistent connection to an InterBase database
ibase_prepare([int link_identifier, string query]) Prepare a query for later binding of parameter placeholders and execution
ibase_query([int link_identifier, string query [, int bind_args]]) Execute a query on an InterBase database
ibase_rollback([int link_identifier, int trans_number]) Rolls back a transaction
ibase_timefmt(string format [, int columntype]) Sets the format of timestamp, date and time type columns returned from queries
ibase_trans([int trans_args [, int link_identifier]]) Begin a transaction
icap_close(int icap_stream [, int flags]) Close an ICAP stream
icap_create_calendar(int stream_id, string calendar) Create a new calendar
icap_delete_calendar(int stream_id, string calendar) Delete a calendar
icap_delete_event(int stream_id, int uid) Delete an event from an ICAP calendar
icap_fetch_event(int stream_id, int event_id [, int options]) Fetches an event from the calendar stream/
icap_list_alarms(int stream_id, array date, array time) Return a list of events that has an alarm triggered at the given datetime
icap_list_events(int stream_id, int begin_date [, int end_date]) Return a list of events between two given datetimes
icap_open(string calendar, string username, string password, string options) Opens up an ICAP connection
icap_rename_calendar(int stream_id, string old_name, string new_name) Rename a calendar
icap_reopen(int stream_id, string calendar [, int options]) Reopen ICAP stream to new calendar
icap_snooze(int stream_id, int uid) Snooze an alarm
icap_store_event(int stream_id, object event) Store an event into an ICAP calendar
iconv(string in_charset, string out_charset, string str) Convert string to requested character encoding
iconv_get_encoding([string type]) Get current setting for character encoding conversion
iconv_set_encoding(string type, string charset) Set current setting for character encoding conversion
ifx_affected_rows(int result_id) Get number of rows affected by a query
ifx_blobinfile_mode(int mode) Set the default blob mode for all select queries
ifx_byteasvarchar(int mode) Set the default byte mode
ifx_close([int link_identifier]) Close Informix connection
ifx_connect([string database [, string userid [, string password]]]) Open Informix server connection
ifx_copy_blob(int bid) Duplicates the given blob object
ifx_create_blob(int type, int mode, string param) Creates an blob object
ifx_create_char(string param) Creates an char object
ifx_do(int result_id) Execute a previously prepared SQL-statement
ifx_error(void) Returns error code of last Informix call
ifx_errormsg([int errorcode]) Returns error message of last Informix call
ifx_fetch_row(int result_id [, mixed position]) Get row as enumerated array
ifx_fieldproperties(int result_id) List of SQL fieldproperties
ifx_fieldtypes(int result_id) List of Informix SQL fields
ifx_free_blob(int bid) Deletes the blob object
ifx_free_char(int bid) Deletes the char object
ifx_free_result(int result_id) Releases resources for the query
ifx_get_blob(int bid) Return the content of a blob object
ifx_get_char(int bid) Return the content of the char object
ifx_getsqlca(int result_id) Get the contents of sqlca.sqlerrd[0..5] after a query
ifx_htmltbl_result(int result_id [, string html_table_options]) Formats all rows of a query into a HTML table
ifx_nullformat(int mode) Sets the default return value on a fetch row
ifx_num_fields(int result_id) Returns the number of columns in the query
ifx_num_rows(int result_id) Count the rows already fetched from a query
ifx_pconnect([string database [, string userid [, string password]]]) Open persistent Informix connection
ifx_prepare(string query, int conn_id [, int cursor_def, mixed blobidarray]) Prepare an SQL-statement for execution
ifx_query(string query [, int link_identifier [, int cursor_type [, mixed blobidarray]]]) Send Informix query
ifx_textasvarchar(int mode) Set the default text mode
ifx_update_blob(int bid, string content) Updates the content of the blob object
ifx_update_char(int bid, string content) Updates the content of the char object
ifxus_close_slob(int bid) Deletes the slob object
ifxus_create_slob(int mode) Creates an slob object and opens it
ifxus_free_slob(int bid) Deletes the slob object
ifxus_open_slob(long bid, int mode) Opens an slob object
ifxus_read_slob(long bid, long nbytes) Reads nbytes of the slob object
ifxus_seek_slob(long bid, int mode, long offset) Sets the current file or seek position
ifxus_tell_slob(long bid) Returns the current file or seek position
ifxus_write_slob(long bid, string content) Writes a string into the slob object
ignore_user_abort([int setting]) Set whether a client disconnect should abort script execution
image2wbmp(resource image [, string filename [, int threshold]]) Output image to browser or file
imagealphablending(resource image, bool blendmode) Set the blending mode for an image
imagearc(resource image, int cx, int cy, int w, int h, int s, int e, int col) Draw a partial ellipse
imagecolorallocate(resource image, int red, int green, int blue) Allocate a color for an image
imagecolorat(resource image, int x, int y) Get the index of the color of a pixel
imagecolorclosest(resource image, int red, int green, int blue) Get the index of the closest color to the specified color
imagecolorclosestalpha(resource image, int red, int green, int blue, int alpha) Get the index of the closest color to the specified color + alpha
imagecolorclosesthwb(resource image, int red, int green, int blue) Get the index of the color which has the hue, white and blackness nearest to the given color
imagecolordeallocate(resource image, int color) De-allocate a color for an image
imagecolorexact(resource image, int red, int green, int blue) Get the index of the specified color
imagecolorexactalpha(resource image, int red, int green, int blue, int alpha) Get the index of the specified color + alpha
imagecolorresolve(resource image, int red, int green, int blue) Get the index of the specified color or its closest possible alternative
imagecolorresolvealpha(resource image, int red, int green, int blue, int alpha) Get the index of the specified color + alpha or its closest possible alternative
imagecolorset(resource image, int index, int red, int green, int blue) Set the color for the specified palette index
imagecolorsforindex(resource image, int index) Get the colors for an index
imagecolorstotal(resource image) Find out the number of colors in an image's palette
imagecolortransparent(resource image [, int color]) Define a color as transparent
imagecopy(resource dst_im, resource src_im, int dst_x, int dst_y, int src_x, int src_y, int src_w, int src_h) Copy part of an image
imagecopymerge(resource dst_im, resource src_im, int dst_x, int dst_y, int src_x, int src_y, int src_w, int src_h, int pct) Copy and merge part of an image
imagecopymergegray(resource dst_im, resource src_im, int dst_x, int dst_y, int src_x, int src_y, int src_w, int src_h, int pct) Copy and merge part of an image with gray scale
imagecopyresampled(resource dst_im, resource src_im, int dstX, int dstY, int srcX, int srcY, int dstW, int dstH, int srcW, int srcH) Copy and resize part of an image with resampling
imagecopyresized(resource dst_im, resource src_im, int dstX, int dstY, int srcX, int srcY, int dstW, int dstH, int srcW, int srcH) Copy and resize part of an image
imagecreate(int x_size, int y_size) Create a new palette based image
imagecreatefromgd(string filename) Create a new image from GD file or URL
imagecreatefromgd2(string filename) Create a new image from GD2 file or URL
imagecreatefromgd2part(string filename, int srcX, int srcY, int width, int height) Create a new image from a given part of GD2 file or URL
imagecreatefromgif(string filename) Create a new image from file or URL
imagecreatefromjpeg(string filename) Create a new image from file or URL
imagecreatefrompng(string filename) Create a new image from file or URL
imagecreatefromstring(string image) Create a new image from the image stream in the string
imagecreatefromwbmp(string filename) Create a new image from file or URL
imagecreatefromxbm(string filename) Create a new image from file or URL
imagecreatefromxpm(string filename) Create a new image from file or URL
imagecreatetruecolor(int x_size, int y_size) Create a new true color image
imagedashedline(resource image, int x1, int y1, int x2, int y2, int col) Draw a dashed line
imagedestroy(resource image) Destroy an image
imageellipse(resource image, int cx, int cy, int w, int h, int col) Draw an ellipse
imagefill(resource image, int x, int y, int col) Flood fill
imagefilledarc(resource image, int cx, int cy, int w, int h, int s, int e, int col, int style) Draw a partial ellipse and fill it
imagefilledellipse(resource image, int cx, int cy, int w, int h, int col) Draw a filled ellipse
imagefilledpolygon(resource image, array points, int num_points, int col) Draw a filled polygon
imagefilledrectangle(resource image, int x1, int y1, int x2, int y2, int col) Draw a filled rectangle
imagefilltoborder(resource image, int x, int y, int border, int col) Flood fill to specific color
imagefontheight(int font) Get font height
imagefontwidth(int font) Get font width
imageftbbox(int size, int angle, string font_file, string text [, array extrainfo]) Give the bounding box of a text using fonts via freetype2
imagefttext(resource image, int size, int angle, int x, int y, int col, string font_file, string text [, array extrainfo]) Write text to the image using fonts using FreeType 2
imagegammacorrect(resource image, float inputgamma, float outputgamma) Apply a gamma correction to a GD image
imagegd(resource image [, string filename]) Output GD image to browser or file
imagegd2(resource image [, string filename]) Output GD2 image to browser or file
imagegif(resource image [, string filename]) Output image to browser or file
imagechar(resource image, int font, int x, int y, string c, int col) Draw a character horizontally
imagecharup(resource image, int font, int x, int y, string c, int col) Draw a character vertically
imageinterlace(resource image [, int interlace]) Enable or disable interlace
imagejpeg(resource image [, string filename [, int quality]]) Output image to browser or file
imageline(resource image, int x1, int y1, int x2, int y2, int col) Draw a line
imageloadfont(string file) Load a new font
imagepalettecopy(resource destination, resource source) Copy the palette from one image to another
imagepng(resource image [, string filename]) Output a PNG image to either the browser or a file
imagepolygon(resource image, array points, int num_points, int col) Draw a polygon
imagepsbbox(string text, int font, int size [, int space [, int tightness [, float angle]]]) Give the bounding box of a text rectangle using PostScript Type1 fonts
ImagePSCopyFont(int fontindex) Make a copy of an already loaded font for further modification
imagepsencodefont(int font_index, string encodingfile) Change the character encoding vector of a font
imagepsextendfont(int font_index, float extend) Extend or condense a font
imagepsfreefont(int fontindex) Free memory used by a PostScript Type 1 font
imagepsloadfont(string filename) Load a PostScript Type 1 font from file
imagepsslantfont(int font_index, float slant) Slant a font
imagepstext(resource image, string text, int font, int size, int foreground, int background, int x, int y [, int space [, int tightness [, float angle [, int antialias_steps]]]]) To draw a text string over an image using PostScript Type1 fonts
imagerectangle(resource image, int x1, int y1, int x2, int y2, int col) Draw a rectangle
imagesetbrush(resource image, resource brush) Set the brush image for line drawing
imagesetpixel(resource image, int x, int y, int col) Set a single pixel
imagesetstyle(resource image, array style) Set the style for line drawing
imagesetthickness(resource image, int thickness) Set the thickness for line drawing
imagesettile(resource image, resource tile) Set the tile image for filling
imagestring(resource image, int font, int x, int y, string s, int col) Draw a string horizontally
imagestringup(resource image, int font, int x, int y, string s, int col) Draw a string vertically
imagesx(resource image) Get image width
imagesy(resource image) Get image height
imagetruecolortopalette(resource image, bool dither, int ncolors) Convert a true color image to a palette image
imagettfbbox(int size, int angle, string fontfile, string text) Give the bounding box of a text using TrueType fonts
imagettftext(resource image, int size, int angle, int x, int y, int col, string fontfile, string text) Write text to the image using TrueType fonts
imagetypes(void) Return the image types supported by this PHP build
imagewbmp(resource image [, string filename [, int foreground]]) Output image to browser or file
imap_8bit(string string) Convert an 8bit string to a quoted-printable string
imap_alerts(void) This function returns all IMAP alert messages (if any) that have occurred during this page request or since the alert stack was reset
imap_append(int imap_stream, string mbox, string message [, string flags]) Append a string message to a specified mailbox
imap_base64(string text) Decode BASE64 encoded text
imap_binary(string string) Convert an 8bit string to a base64 string
imap_body(int imap_stream, int msg_number [, int flags]) Read the message body
imap_bodystruct(int stream_id, int msg_no, int section) Read the structure of a specified body section of a specific message
imap_clearflag_full(int stream, string sequence, string flag, string options) Clears flags on messages
imap_close(int imap_stream [, int flags]) Close an IMAP stream
imap_createmailbox(int imap_stream, string mbox) Create a new mailbox
imap_delete(int imap_stream, int msg_number [, int flags]) Mark a messge for deletion from current mailbox
imap_deletemailbox(int imap_stream, string mbox) Delete a mailbox
imap_errors(void) This function returns all of the IMAP errors (if any) that have occurred during this page request or since the error stack was reset.
imap_expunge(int imap_stream) Delete all messages marked for deletion
imap_fetch_overview(int imap_stream, string sequence [, int flags]) Read an overview of the information in the headers of the given message
imap_fetchbody(int imap_stream, int msg_number, string part_number [, flags flags]) Fetch a particular section of the body of the message
imap_fetchheader(int imap_stream, int msgno, int flags) Returns header for a message
imap_fetchstructure(int imap_stream, int msg_number [, int flags]) Read the structure of a particular message
imap_get_quota(int imap_stream, string quota_root) Retrieve the quota level settings, and usage statics per mailbox
imap_getmailboxes(int imap_stream, string ref, string pattern) Read the list of mailboxes, returning detailed information on each one
imap_getsubscribed(int imap_stream, string ref, string pattern) List all the subscribed mailboxes
imap_header(int imap_stream, int msg_number [, int fromlength [, int subjectlength [, string defaulthost]]]) Read the header of the message
imap_headerinfo(int imap_stream, int msg_number [, int fromlength [, int subjectlength [, string defaulthost]]]) Read the header of the message
imap_headers(int imap_stream) Returns headers for all messages in a mailbox
imap_check(int imap_stream) Check current mailbox
imap_last_error(void) This function returns the last IMAP error (if any) that occurred during this page request
imap_listmailbox(int imap_stream, string ref, string pattern) Read the list of mailboxes
imap_listsubscribed(int imap_stream, string ref, string pattern) List all the subscribed mailboxes
imap_mail(string to, string subject, string message [, string additional_headers [, string cc [, string bcc [, string rpath]]]]) Send an email message
imap_mail_compose(array envelope, array body) Create a MIME message based on given envelope and body sections
imap_mail_copy(int imap_stream, string msglist, string mbox [, int flags]) Copy specified messages to a mailbox
imap_mail_move(int imap_stream, string msglist, string mbox [, int flags]) Move specified messages to a mailbox
imap_mailboxmsginfo(int imap_stream) Get information about the current mailbox
imap_mime_header_decode(string text) Decode MIME header elements
imap_msgno(int imap_stream, int uid) This function returns the message sequence number for the given UID
imap_num_msg(int imap_stream) Gives the number of messages in the current mailbox
imap_num_recent(int imap_stream) Gives the number of recent messages in current mailbox
imap_open(string mailbox, string username, string password [, int flags]) Open an IMAP stream to a mailbox
imap_ping(int imap_stream) Check if the IMAP stream is still active
imap_popen(string mailbox, string user, string password [, int options]) Open a persistant IMAP stream to a mailbox
imap_qprint(string string) Convert a quoted-printable string to an 8 bit string
imap_renamemailbox(int imap_stream, string old_mbox, string new_mbox) Rename an old mailbox to new mailbox
imap_reopen(int imap_stream, string mailbox [, string flags]) Reopen IMAP stream to new mailbox
imap_rfc822_parse_adrlist(string address, string default_host) Parses an address string
imap_rfc822_parse_headers(string headers [, string defaulthost]) Parse mail headers from a string
imap_rfc822_write_address(string mailbox, string host, string personal) Returns a properly formatted email address given the mailbox, host, and personal info.
imap_scanmailbox(int imap_stream, string ref, string pattern, string content) Read the list of mailboxes, takes a string to search for in the text of the mailbox
imap_search(int imap_stream, string criteria, int flags) This function returns an array of messages matching the given search criteria
imap_set_quota(int imap_stream, string quota_root, int quota_limit) Sets a quota for a given mailbox
imap_setacl(int stream_id, string mailbox, string id, string rights) Sets the ACL for a giving mailbox
imap_setflag_full(int stream, string sequence, string flag, string options) Sets flags on messages
imap_sort(int stream, int criteria, int reverse, int options) Sort an array of message headers
imap_status(int imap_stream, string mailbox, int options) This function returns status information on a mailbox other than the current one
imap_subscribe(int imap_stream, string mbox) Subscribe to a mailbox
imap_thread(int stream_id [, int flags]) Return threaded by REFERENCES tree
imap_uid(int imap_stream, int msgno) This function returns the UID for the given message sequence number
imap_undelete(int imap_stream, int msg_number) Unmark the message which is marked deleted
imap_unsubscribe(int imap_stream, string mbox) Unsubscribe from a mailbox
imap_utf7_decode(string text) Decodes a modified UTF-7 encoded string.
imap_utf7_encode(string data) Converts 8bit data to modified UTF-7 text.
imap_utf8(string text) Converts text to UTF8
implode(string glue, array pieces) Join array elements with a string
import_request_variables(string types [, string prefix]) Import GET/POST/Cookie variables into the global scope
in_array(mixed needle, array haystack [, bool strict]) Return TRUE if a value exists in an array
ingres_autocommit([resource link]) Switch autocommit on or off
ingres_close([resource link]) Close an Ingres II database connection
ingres_commit([resource link]) Commit a transaction
ingres_connect([string database [, string username [, string password]]]) Open a connection to an Ingres II database
ingres_fetch_array([int result_type [, resource link]]) Fetch a row of result into an array
ingres_fetch_object([int result_type [, resource link]]) Fetch a row of result into an object.
ingres_fetch_row([resource link]) Fetch a row of result into an enumerated array
ingres_field_length(int index [, resource link]) Get the length of a field
ingres_field_name(int index [, resource link]) Get the name of a field in a query result.
ingres_field_nullable(int index [, resource link]) Test if a field is nullable
ingres_field_precision(int index [, resource link]) Get the precision of a field
ingres_field_scale(int index [, resource link]) Get the scale of a field
ingres_field_type(int index [, resource link]) Get the type of a field in a query result
ingres_num_fields([resource link]) Get the number of fields returned by the last query
ingres_num_rows([resource link]) Get the number of rows affected or returned by the last query
ingres_pconnect([string database [, string username [, string password]]]) Open a persistent connection to an Ingres II database
ingres_query(string query [, resource link]) Send a SQL query to Ingres II
ingres_rollback([resource link]) Roll back a transaction
ini_alter(string varname, string newvalue) Changes the value of a configuration option
ini_get(string varname) Gets the value of a configuration option
ini_get_all([string extension]) Gets all configuration options
ini_restore(string varname) Restores the value of a configuration option
ini_set(string varname, string newvalue) Sets the value of a configuration option
intval(mixed var [, int base]) Get integer value of a variable
ip2long(string ip_address) Converts a string containing an (IPv4) Internet Protocol dotted address into a proper address.
iptcembed(string iptcdata, string jpeg_file_name [, int spool]) Embed binary IPTC data into a JPEG image
iptcparse(string iptcblock) Parse a binary IPTC http://www.iptc.org/ block into single tags.
ircg_disconnect(resource connection, string reason) Close connection to server
ircg_fetch_error_msg(resource connection) Returns the error from previous ircg operation
ircg_get_username(int connection) Get username for connection
ircg_html_encode(string html_string) Encodes HTML preserving output
ircg_channel_mode(resource connection, string channel, string mode_spec, string nick) Set channel mode flags for user
ircg_ignore_add(resource connection, string nick) Add a user to your ignore list on a server
ircg_ignore_del(resource connection, string nick) Remove a user from your ignore list on a server
ircg_is_conn_alive(resource connection) Check connection status
ircg_join(resource connection, string channel) Join a channel on a connected server
ircg_kick(resource connection, string channel, string nick, string reason) Kick a user out of a channel on server
ircg_lookup_format_messages(string name) Select a set of format strings for display of IRC messages
ircg_msg(resource connection, string recipient, string message [, boolean suppress]) Send message to channel or user on server
ircg_nick(resource connection, string nick) Change nickname on server
ircg_nickname_escape(string nick) Encode special characters in nickname to be IRC-compliant
ircg_nickname_unescape(string nick) Decodes encoded nickname
ircg_notice(resource connection, string , string message) Send a notice to a user on server
ircg_part(resource connection, string channel) Leave a channel on server
ircg_pconnect(string username [, string server_ip [, int server_port [, string msg_format [, array ctcp_messages [, array user_settings]]]]]) Connect to an IRC server
ircg_register_format_messages(string name, array messages) Register a set of format strings for display of IRC messages
ircg_set_current(resource connection) Set current connection for output
ircg_set_file(int connection, string path) Set logfile for connection
ircg_set_on_die(int connection, string host, int port, string data) Set hostaction to be execute when connection dies
ircg_topic(resource connection, string channel, string new_topic) Set topic for channel on server
ircg_whois(resource connection, string nick) Query user information for nick on server
is_a(object object, string class_name) Returns true if the object is of this class or has this class as one of its parents
is_array(mixed var) Finds whether a variable is an array
is_bool(mixed var) Finds out whether a variable is a boolean
is_callable(mixed var [, bool syntax_only [, string callable_name]]) Find out whether the argument is a valid callable construct
is_dir(string filename) Tells whether the filename is a directory
is_double(?) Alias of is_float()
is_executable(string filename) Tells whether the filename is executable
is_file(string filename) Tells whether the filename is a regular file
is_finite(float val) 
is_float(mixed var) Finds whether a variable is a float
is_infinite(float val) 
is_int(mixed var) Find whether a variable is an integer
is_integer(?) Alias of is_int()
is_link(string filename) Tells whether the filename is a symbolic link
is_long(?) Alias of is_int()
is_nan(float val) 
is_null(mixed var) Finds whether a variable is NULL
is_numeric(mixed var) Finds whether a variable is a number or a numeric string
is_object(mixed var) Finds whether a variable is an object
is_readable(string filename) Tells whether the filename is readable
is_real(?) Alias of is_float()
is_resource(mixed var) Finds whether a variable is a resource
is_scalar(mixed var) Finds whether a variable is a scalar
is_string(mixed var) Finds whether a variable is a string
is_subclass_of(object object, string class_name) Returns true if the object has this class as one of its parents
is_uploaded_file(string filename) Tells whether the file was uploaded via HTTP POST
is_writable(string filename) Tells whether the filename is writable
is_writeable(string filename) Tells whether the filename is writable
isset(mixed var [, mixed var [, ...]]) Determine whether a variable is set
java_last_exception_clear(void) Clear last Java exception
java_last_exception_get(void) Get last Java exception
JDDayOfWeek(int julianday, int mode) Returns the day of the week
JDMonthName(int julianday, int mode) Returns a month name
JDToFrench(int juliandaycount) Converts a Julian Day Count to the French Republican Calendar
JDToGregorian(int julianday) Converts Julian Day Count to Gregorian date
JDToJewish(int julianday) Converts a Julian Day Count to the Jewish Calendar
JDToJulian(int julianday) Converts a Julian Day Count to a Julian Calendar Date
jdtounix(int jday) Convert Julian Day to UNIX timestamp
JewishToJD(int month, int day, int year) Converts a date in the Jewish Calendar to Julian Day Count
join(string glue, array pieces) Join array elements with a string
jpeg2wbmp(string jpegname, string wbmpname, int d_height, int d_width, int threshold) Convert JPEG image file to WBMP image file
JulianToJD(int month, int day, int year) Converts a Julian Calendar date to Julian Day Count
key(array array) Fetch a key from an associative array
krsort(array array [, int sort_flags]) Sort an array by key in reverse order
ksort(array array [, int sort_flags]) Sort an array by key
lcg_value(void) Combined linear congruential generator
ldap_8859_to_t61(string value) Translate 8859 characters to t61 characters
ldap_add(resource link_identifier, string dn, array entry) Add entries to LDAP directory
ldap_bind(resource link_identifier [, string bind_rdn [, string bind_password]]) Bind to LDAP directory
ldap_close(resource link_identifier) Close link to LDAP server
ldap_compare(resource link_identifier, string dn, string attribute, string value) Compare value of attribute found in entry specified with DN
ldap_connect([string hostname [, int port]]) Connect to an LDAP server
ldap_count_entries(resource link_identifier, resource result_identifier) Count the number of entries in a search
ldap_delete(resource link_identifier, string dn) Delete an entry from a directory
ldap_dn2ufn(string dn) Convert DN to User Friendly Naming format
ldap_err2str(int errno) Convert LDAP error number into string error message
ldap_errno(resource link_identifier) Return the LDAP error number of the last LDAP command
ldap_error(resource link_identifier) Return the LDAP error message of the last LDAP command
ldap_explode_dn(string dn, int with_attrib) Splits DN into its component parts
ldap_first_attribute(resource link_identifier, resource result_entry_identifier, int ber_identifier) Return first attribute
ldap_first_entry(resource link_identifier, resource result_identifier) Return first result id
ldap_first_reference(resource link, resource result) Return first reference
ldap_free_result(resource result_identifier) Free result memory
ldap_get_attributes(resource link_identifier, resource result_entry_identifier) Get attributes from a search result entry
ldap_get_dn(resource link_identifier, resource result_entry_identifier) Get the DN of a result entry
ldap_get_entries(resource link_identifier, resource result_identifier) Get all result entries
ldap_get_option(resource link_identifier, int option, mixed retval) Get the current value for given option
ldap_get_values(resource link_identifier, resource result_entry_identifier, string attribute) Get all values from a result entry
ldap_get_values_len(resource link_identifier, resource result_entry_identifier, string attribute) Get all binary values from a result entry
ldap_list(resource link_identifier, string base_dn, string filter [, array attributes [, int attrsonly [, int sizelimit [, int timelimit [, int deref]]]]]) Single-level search
ldap_mod_add(resource link_identifier, string dn, array entry) Add attribute values to current attributes
ldap_mod_del(resource link_identifier, string dn, array entry) Delete attribute values from current attributes
ldap_mod_replace(resoure link_identifier, string dn, array entry) Replace attribute values with new ones
ldap_modify(resource link_identifier, string dn, array entry) Modify an LDAP entry
ldap_next_attribute(resource link_identifier, resource result_entry_identifier, resource ber_identifier) Get the next attribute in result
ldap_next_entry(resource link_identifier, resource result_entry_identifier) Get next result entry
ldap_next_reference(resource link, resource entry) Get next reference
ldap_parse_reference(resource link, resource entry, array referrals) Extract information from reference entry
ldap_parse_result(resource link, resource result, int errcode, string matcheddn, string errmsg, array referrals) Extract information from result
ldap_read(resource link_identifier, string base_dn, string filter [, array attributes [, int attrsonly [, int sizelimit [, int timelimit [, int deref]]]]]) Read an entry
ldap_rename(resource link_identifier, string dn, string newrdn, string newparent, bool deleteoldrdn) Modify the name of an entry
ldap_search(resource link_identifier, string base_dn, string filter [, array attributes [, int attrsonly [, int sizelimit [, int timelimit [, int deref]]]]]) Search LDAP tree
ldap_set_option(resource link_identifier, int option, mixed newval) Set the value of the given option
ldap_set_rebind_proc(resource link, string callback) Set a callback function to do re-binds on referral chasing.
ldap_sort(resource link, resource result, string sortfilter) Sort LDAP result entries
ldap_start_tls(resource link) Start TLS
ldap_t61_to_8859(string value) Translate t61 characters to 8859 characters
ldap_unbind(resource link_identifier) Unbind from LDAP directory
leak(int bytes) Leak memory
levenshtein(string str1, string str2) Calculate Levenshtein distance between two strings
link(string target, string link) Create a hard link
linkinfo(string path) Gets information about a link
list(mixed ...) Assign variables as if they were an array
localeconv(void) Get numeric formatting information
localtime([int timestamp [, bool is_associative]]) Get the local time
log(float arg) Natural logarithm
log10(float arg) Base-10 logarithm
log1p(float number) Returns log(1 + number), computed in a way that accurate even when the val ue of number is close to zero
long2ip(int proper_address) Converts an (IPv4) Internet network address into a string in Internet standard dotted format
lstat(string filename) Gives information about a file or symbolic link
ltrim(string str [, string charlist]) Strip whitespace from the beginning of a string
mail(string to, string subject, string message [, string additional_headers [, string additional_parameters]]) send mail
mailparse_determine_best_xfer_encoding(resource fp) Figures out the best way of encoding the content read from the file pointer fp, which must be seek-able
mailparse_msg_create(void) Returns a handle that can be used to parse a message
mailparse_msg_extract_part(resource rfc2045, string msgbody [, string callbackfunc]) Extracts/decodes a message section.  If callbackfunc is not specified, the contents will be sent to "stdout"
mailparse_msg_extract_part_file(resource rfc2045, string filename [, string callbackfunc]) Extracts/decodes a message section, decoding the transfer encoding
mailparse_msg_free(resource rfc2045buf) Frees a handle allocated by mailparse_msg_crea
mailparse_msg_get_part(resource rfc2045, string mimesection) Returns a handle on a given section in a mimemessage
mailparse_msg_get_part_data(resource rfc2045) Returns an associative array of info about the message
mailparse_msg_get_structure(resource rfc2045) Returns an array of mime section names in the supplied message
mailparse_msg_parse(resource rfc2045buf, string data) Incrementally parse data into buffer
mailparse_msg_parse_file(string filename) Parse file and return a resource representing the structure
mailparse_rfc822_parse_addresses(string addresses) Parse addresses and returns a hash containing that data
mailparse_stream_encode(resource sourcefp, resource destfp, string encoding) Streams data from source file pointer, apply encoding and write to destfp
mailparse_uudecode_all(resource fp) Scans the data from fp and extract each embedded uuencoded file. Returns an array listing filename information
max(mixed arg1, mixed arg2, mixed argn) Find highest value
mb_convert_encoding(string str, string to-encoding [, mixed from-encoding]) Convert character encoding
mb_convert_kana(string str, string option [, mixed encoding]) Convert "kana" one from another ("zen-kaku" ,"han-kaku" and more)
mb_convert_variables(string to-encoding, mixed from-encoding, mixed vars) Convert character code in variable(s)
mb_decode_mimeheader(string str) Decode string in MIME header field
mb_decode_numericentity(string str, array convmap [, string encoding]) Decode HTML numeric string reference to character
mb_detect_encoding(string str [, mixed encoding-list]) Detect character encoding
mb_detect_order([mixed encoding-list]) Set/Get character encoding detection order
mb_encode_mimeheader(string str [, string charset [, string transfer-encoding [, string linefeed]]]) Encode string for MIME header
mb_encode_numericentity(string str, array convmap [, string encoding]) Encode character to HTML numeric string reference
mb_ereg(string pattern, string string [, array regs]) Regular expression match with multibyte support
mb_ereg_match(string pattern, string string [, string option]) Regular expression match for multibyte string
mb_ereg_replace(string pattern, string replacement, string string [, array option]) Replace regular expression with multibyte support
mb_ereg_search([string pattern [, string option]]) Multibyte regular expression match for predefined multibyte string
mb_ereg_search_getpos(void) Returns start point for next regular expression match
mb_ereg_search_getregs(void) Retrive the result from the last multibyte regular expression match
mb_ereg_search_init(string string [, string pattern [, string option]]) Setup string and regular expression for multibyte regular expression match
mb_ereg_search_pos([string pattern [, string option]]) Return position and length of matched part of multibyte regular expression for predefined multibyte string
mb_ereg_search_regs([string pattern [, string option]]) Returns the matched part of multibyte regular expression
mb_ereg_search_setpos(void) Set start point of next regular expression match
mb_eregi(string pattern, string string [, array regs]) Regular expression match ignoring case with multibyte support
mb_eregi_replace(string pattern, string replace, string string) Replace regular expression with multibyte support ignoring case
mb_get_info([string type]) Get internal settings of mbstring
mb_http_input([string type]) Detect HTTP input character encoding
mb_http_output([string encoding]) Set/Get HTTP output character encoding
mb_internal_encoding([string encoding]) Set/Get internal character encoding
mb_language([string language]) Set/Get current language
mb_output_handler(string contents, int status) Callback function converts character encoding in output buffer
mb_parse_str(string encoded_string [, array result]) Parse GET/POST/COOKIE data and set global variable
mb_preferred_mime_name(string encoding) Get MIME charset string
mb_regex_encoding([string encoding]) Returns current encoding for multibyte regex as string
mb_send_mail(string to, string subject, string message [, string additional_headers [, string additional_parameter]]) Send encoded mail.
mb_split(string pattern, string string [, int limit]) Split multibyte string using regular expression
mb_strcut(string str, int start [, int length [, string encoding]]) Get part of string
mb_strimwidth(string str, int start, int width, string trimmarker [, string encoding]) Get truncated string with specified width
mb_strlen(string str [, string encoding]) Get string length
mb_strpos(string haystack, string needle [, int offset [, string encoding]]) Find position of first occurrence of string in a string
mb_strrpos(string haystack, string needle [, string encoding]) Find position of last occurrence of a string in a string
mb_strwidth(string str [, string encoding]) Return width of string
mb_substitute_character([mixed substrchar]) Set/Get substitution character
mb_substr(string str, int start [, int length [, string encoding]]) Get part of string
mcal_append_event(int mcal_stream) Store a new event into an MCAL calendar
mcal_close(int mcal_stream, int flags) Close an MCAL stream
mcal_create_calendar(int stream, string calendar) Create a new MCAL calendar
mcal_date_compare(int a_year, int a_month, int a_day, int b_year, int b_month, int b_day) Compares two dates
mcal_date_valid(int year, int month, int day) Returns TRUE if the given year, month, day is a valid date
mcal_day_of_week(int year, int month, int day) Returns the day of the week of the given date
mcal_day_of_year(int year, int month, int day) Returns the day of the year of the given date
mcal_days_in_month(int month, int leap year) Returns the number of days in the given month
mcal_delete_calendar(int stream, string calendar) Delete an MCAL calendar
mcal_delete_event(int mcal_stream [, int event_id]) Delete an event from an MCAL calendar
mcal_event_add_attribute(int stream, string attribute, string value) Adds an attribute and a value to the streams global event structure
mcal_event_init(int stream) Initializes a streams global event structure
mcal_event_set_alarm(int stream, int alarm) Sets the alarm of the streams global event structure
mcal_event_set_category(int stream, string category) Sets the category of the streams global event structure
mcal_event_set_class(int stream, int class) Sets the class of the streams global event structure
mcal_event_set_description(int stream, string description) Sets the description of the streams global event structure
mcal_event_set_end(int stream, int year, int month [, int day [, int hour [, int min [, int sec]]]]) Sets the end date and time of the streams global event structure
mcal_event_set_recur_daily(int stream, int year, int month, int day, int interval) Sets the recurrence of the streams global event structure
mcal_event_set_recur_monthly_mday(int stream, int year, int month, int day, int interval) Sets the recurrence of the streams global event structure
mcal_event_set_recur_monthly_wday(int stream, int year, int month, int day, int interval) Sets the recurrence of the streams global event structure
mcal_event_set_recur_none(int stream) Sets the recurrence of the streams global event structure
mcal_event_set_recur_weekly(int stream, int year, int month, int day, int interval, int weekdays) Sets the recurrence of the streams global event structure
mcal_event_set_recur_yearly(int stream, int year, int month, int day, int interval) Sets the recurrence of the streams global event structure
mcal_event_set_start(int stream, int year, int month [, int day [, int hour [, int min [, int sec]]]]) Sets the start date and time of the streams global event structure
mcal_event_set_title(int stream, string title) Sets the title of the streams global event structure
mcal_expunge(int stream) Deletes all events marked for being expunged.
mcal_fetch_current_stream_event(int stream) Returns an object containing the current streams event structure
mcal_fetch_event(int mcal_stream, int event_id [, int options]) Fetches an event from the calendar stream
mcal_is_leap_year(int year) Returns if the given year is a leap year or not
mcal_list_alarms(int mcal_stream [, int begin_year [, int begin_month [, int begin_day [, int end_year [, int end_month [, int end_day]]]]]]) Return a list of events that has an alarm triggered at the given datetime
mcal_list_events(int mcal_stream, object begin_date [, object end_date]) Return a list of IDs for a date or a range of dates.
mcal_next_recurrence(int stream, int weekstart, array next) Returns the next recurrence of the event
mcal_open(string calendar, string username, string password [, int options]) Opens up an MCAL connection
mcal_popen(string calendar, string username, string password [, int options]) Opens up a persistent MCAL connection
mcal_rename_calendar(int stream, string old_name, string new_name) Rename an MCAL calendar
mcal_reopen(string calendar [, int options]) Reopens an MCAL connection
mcal_snooze(int id) Turn off an alarm for an event
mcal_store_event(int mcal_stream) Modify an existing event in an MCAL calendar
mcal_time_valid(int hour, int minutes, int seconds) Returns TRUE if the given year, month, day is a valid time
mcal_week_of_year(int day, int month, int year) Returns the week number of the given date
mcrypt_cbc(int cipher, string key, string data, int mode [, string iv]) Encrypt/decrypt data in CBC mode
mcrypt_cfb(int cipher, string key, string data, int mode, string iv) Encrypt/decrypt data in CFB mode
mcrypt_create_iv(int size, int source) Create an initialization vector (IV) from a random source
mcrypt_decrypt(string cipher, string key, string data, string mode [, string iv]) Decrypts crypttext with given parameters
mcrypt_ecb(int cipher, string key, string data, int mode) Encrypt/decrypt data in ECB mode
mcrypt_enc_get_algorithms_name(resource td) Returns the name of the opened algorithm
mcrypt_enc_get_block_size(resource td) Returns the blocksize of the opened algorithm
mcrypt_enc_get_iv_size(resource td) Returns the size of the IV of the opened algorithm
mcrypt_enc_get_key_size(resource td) Returns the maximum supported keysize of the opened mode
mcrypt_enc_get_modes_name(resource td) Returns the name of the opened mode
mcrypt_enc_get_supported_key_sizes(resource td) Returns an array with the supported keysizes of the opened algorithm
mcrypt_enc_is_block_algorithm(resource td) Checks whether the algorithm of the opened mode is a block algorithm
mcrypt_enc_is_block_algorithm_mode(resource td) Checks whether the encryption of the opened mode works on blocks
mcrypt_enc_is_block_mode(resource td) Checks whether the opened mode outputs blocks
mcrypt_enc_self_test(resource td) This function runs a self test on the opened module
mcrypt_encrypt(string cipher, string key, string data, string mode [, string iv]) Encrypts plaintext with given parameters
mcrypt_generic(resource td, string data) This function encrypts data
mcrypt_generic_deinit(resource td) This function terminates encrypt specified by the descriptor td
mcrypt_generic_end(resource td) This function terminates encryption
mcrypt_generic_init(resource td, string key, string iv) This function initializes all buffers needed for encryption
mcrypt_get_block_size(int cipher) Get the block size of the specified cipher
mcrypt_get_cipher_name(int cipher) Get the name of the specified cipher
mcrypt_get_iv_size(string cipher, string mode) Returns the size of the IV belonging to a specific cipher/mode combination
mcrypt_get_key_size(int cipher) Get the key size of the specified cipher
mcrypt_list_algorithms([string lib_dir]) Get an array of all supported ciphers
mcrypt_list_modes([string lib_dir]) Get an array of all supported modes
mcrypt_module_close(resource td) Free the descriptor td
mcrypt_module_get_algo_block_size(string algorithm [, string lib_dir]) Returns the blocksize of the specified algorithm
mcrypt_module_get_algo_key_size(string algorithm [, string lib_dir]) Returns the maximum supported keysize of the opened mode
mcrypt_module_get_supported_key_sizes(string algorithm [, string lib_dir]) Returns an array with the supported keysizes of the opened algorithm
mcrypt_module_is_block_algorithm(string algorithm [, string lib_dir]) This function checks whether the specified algorithm is a block algorithm
mcrypt_module_is_block_algorithm_mode(string mode [, string lib_dir]) This function returns if the the specified module is a block algorithm or not
mcrypt_module_is_block_mode(string mode [, string lib_dir]) This function returns if the the specified mode outputs blocks or not
mcrypt_module_open(string algorithm, string algorithm_directory, string mode, string mode_directory) This function opens the module of the algorithm and the mode to be used
mcrypt_module_self_test(string algorithm [, string lib_dir]) This function runs a self test on the specified module
mcrypt_ofb(int cipher, string key, string data, int mode, string iv) Encrypt/decrypt data in OFB mode
md5(string str) Calculate the md5 hash of a string
md5_file(string filename) Calculates the md5 hash of a given filename
mdecrypt_generic(resource td, string data) This function decrypts data
metaphone(string str) Calculate the metaphone key of a string
method_exists(object object, string method_name) Checks if the class method exists
mhash(int hash, string data [, string key]) Compute hash
mhash_count(void) Get the highest available hash id
mhash_get_block_size(int hash) Get the block size of the specified hash
mhash_get_hash_name(int hash) Get the name of the specified hash
mhash_keygen_s2k(int hash, string password, string salt, int bytes) Generates a key
microtime(void) Return current UNIX timestamp with microseconds
min(number arg1, number arg2 [, ...]) Find lowest value
ming_setcubicthreshold(int threshold) Set cubic threshold (?)
ming_setscale(int scale) Set scale (?)
ming_useswfversion(int version) Use SWF version (?)
mkdir(string pathname, int mode) Makes directory
mktime(int hour, int minute, int second, int month, int day, int year [, int is_dst]) Get UNIX timestamp for a date
move_uploaded_file(string filename, string destination) Moves an uploaded file to a new location
msession_connect(string host, string port) Connect to msession server
msession_count(void) Get session count
msession_create(string session) Create a session
msession_destroy(string name) Destroy a session
msession_disconnect(void) Close connection to msession server
msession_find(string name, string value) Find value
msession_get(string session, string name, string value) Get value from session
msession_get_array(string session) Get array of ... ?
msession_getdata(string session) Get data ... ?
msession_inc(string session, string name) Increment value in session
msession_list(void) List ... ?
msession_listvar(string name) List sessions with variable
msession_lock(string name) Lock a session
msession_plugin(string session, string val [, string param]) Call an escape function within the msession personality plugin
msession_randstr(int param) Get random string
msession_set(string session, string name, string value) Set value in session
msession_set_array(string session, array tuples) Set array of ...
msession_setdata(string session, string value) Set data  ... ?
msession_timeout(string session [, int param]) Set/get session timeout
msession_uniq(int param) Get uniq id
msession_unlock(string session, int key) Unlock a session
msql(string database, string query, int link_identifier) Send mSQL query
msql_affected_rows(int query_identifier) Returns number of affected rows
msql_close(int link_identifier) Close mSQL connection
msql_connect([string hostname [, string server [, string username [, string password]]]]) Open mSQL connection
msql_create_db(string database name [, int link_identifier]) Create mSQL database
msql_createdb(string database name [, int link_identifier]) Create mSQL database
msql_data_seek(int query_identifier, int row_number) Move internal row pointer
msql_dbname(int query_identifier, int i) Get current mSQL database name
msql_drop_db(string database_name, int link_identifier) Drop (delete) mSQL database
msql_dropdb(?) Drop (delete) mSQL database
msql_error([int link_identifier]) Returns error message of last msql call
msql_fetch_array(int query_identifier [, int result_type]) Fetch row as array
msql_fetch_field(int query_identifier, int field_offset) Get field information
msql_fetch_object(int query_identifier [, int result_type]) Fetch row as object
msql_fetch_row(int query_identifier) Get row as enumerated array
msql_field_seek(int query_identifier, int field_offset) Set field offset
msql_fieldflags(int query_identifier, int i) Get field flags
msql_fieldlen(int query_identifier, int i) Get field length
msql_fieldname(int query_identifier, int field) Get field name
msql_fieldtable(int query_identifier, int field) Get table name for field
msql_fieldtype(int query_identifier, int i) Get field type
msql_free_result(int query_identifier) Free result memory
msql_freeresult(?) Free result memory
msql_list_dbs(void) List mSQL databases on server
msql_list_fields(string database, string tablename) List result fields
msql_list_tables(string database) List tables in an mSQL database
msql_listdbs(?) List mSQL databases on server
msql_listfields(?) List result fields
msql_listtables(?) List tables in an mSQL database
msql_num_fields(int query_identifier) Get number of fields in result
msql_num_rows(int query_identifier) Get number of rows in result
msql_numfields(int query_identifier) Get number of fields in result
msql_numrows(void) Get number of rows in result
msql_pconnect([string server [, string username [, string password]]]) Open persistent mSQL connection
msql_query(string query, int link_identifier) Send mSQL query
msql_regcase(?) Make regular expression for case insensitive match
msql_result(int query_identifier, int i, mixed field) Get result data
msql_select_db(string database_name, int link_identifier) Select mSQL database
msql_selectdb(?) Select mSQL database
msql_tablename(int query_identifier, int field) Get table name of field
mssql_bind(int stmt, string param_name, mixed var, int type [, int is_output [, int is_null [, int maxlen]]]) Adds a parameter to a stored procedure or a remote stored procedure
mssql_close([int link_identifier]) Close MS SQL Server connection
mssql_connect([string servername [, string username [, string password]]]) Open MS SQL server connection
mssql_data_seek(int result_identifier, int row_number) Move internal row pointer
mssql_execute(int stmt) Executes a stored procedure on a MS-SQL server database
mssql_fetch_array(int result) Fetch row as array
mssql_fetch_assoc(int result_id [, int result_type]) Returns an associative array of the current row in the result set specified by result_id
mssql_fetch_batch(string result_index) Returns the next batch of records
mssql_fetch_field(int result [, int field_offset]) Get field information
mssql_fetch_object(int result) Fetch row as object
mssql_fetch_row(int result) Get row as enumerated array
mssql_field_length(int result [, int offset]) Get the length of a field
mssql_field_name(int result [, int offset]) Get the name of a field
mssql_field_seek(int result, int field_offset) Set field offset
mssql_field_type(int result [, int offset]) Get the type of a field
mssql_free_result(int result) Free result memory
mssql_get_last_message(void) Returns the last message from server (over min_message_severity?)
mssql_guid_string(string binary [, int short_format]) Converts a 16 byte binary GUID to a string
mssql_init(string sp_name [, int conn_id]) Initializes a stored procedure or a remote stored procedure
mssql_min_error_severity(int severity) Sets the lower error severity
mssql_min_message_severity(int severity) Sets the lower message severity
mssql_next_result(int result_id) Move the internal result pointer to the next result
mssql_num_fields(int result) Get number of fields in result
mssql_num_rows(string result) Get number of rows in result
mssql_pconnect([string servername [, string username [, string password]]]) Open persistent MS SQL connection
mssql_query(string query [, int link_identifier]) Send MS SQL query
mssql_result(int result, int i, mixed field) Get result data
mssql_rows_affected(int conn_id) Returns the number of records affected by the query
mssql_select_db(string database_name [, int link_identifier]) Select MS SQL database
mt_getrandmax(void) Show largest possible random value
mt_rand([int min, int max]) Generate a better random value
mt_srand(int seed) Seed the better random number generator
muscat_close(resource muscat_handle) Shuts down the muscat session and releases any memory back to php. [Not back to the system, note!]
muscat_get(resource muscat_handle) Gets a line back from the core muscat api.  Returns a literal FALSE when there is no more to get (as opposed to ""). Use === FALSE or !== FALSE to check for this
muscat_give(resource muscat_handle, string string) Sends string to the core muscat api
muscat_setup(int size [, string muscat_dir]) Creates a new muscat session and returns the handle. Size is the ammount of memory in bytes to allocate for muscat muscat_dir is the muscat installation dir e.g. "/usr/local/empower", it defaults to the compile time muscat directory
muscat_setup_net(string muscat_host, int port) Creates a new muscat session and returns the handle. muscat_host is the hostname to connect to port is the port number to connect to - actually takes exactly the same args as fsockopen
mysql_affected_rows([resource link_identifier]) Get number of affected rows in previous MySQL operation
mysql_close([resource link_identifier]) Close MySQL connection
mysql_connect([string server [, string username [, string password [, bool new_link]]]]) Open a connection to a MySQL Server
mysql_create_db(string database name [, resource link_identifier]) Create a MySQL database
mysql_data_seek(resource result_identifier, int row_number) Move internal result pointer
mysql_db_name(resource result, int row [, mixed field]) Get result data
mysql_db_query(string database, string query [, resource link_identifier]) Send a MySQL query
mysql_drop_db(string database_name [, resource link_identifier]) Drop (delete) a MySQL database
mysql_errno([resource link_identifier]) Returns the numerical value of the error message from previous MySQL operation
mysql_error([resource link_identifier]) Returns the text of the error message from previous MySQL operation
mysql_escape_string(string unescaped_string) Escapes a string for use in a mysql_query.
mysql_fetch_array(resource result [, int result_type]) Fetch a result row as an associative array, a numeric array, or both.
mysql_fetch_assoc(resource result) Fetch a result row as an associative array
mysql_fetch_field(resource result [, int field_offset]) Get column information from a result and return as an object
mysql_fetch_lengths(resource result) Get the length of each output in a result
mysql_fetch_object(resource result) Fetch a result row as an object
mysql_fetch_row(resource result) Get a result row as an enumerated array
mysql_field_flags(resource result, int field_offset) Get the flags associated with the specified field in a result
mysql_field_len(resource result, int field_offset) Returns the length of the specified field
mysql_field_name(resource result, int field_index) Get the name of the specified field in a result
mysql_field_seek(resource result, int field_offset) Set result pointer to a specified field offset
mysql_field_table(resource result, int field_offset) Get name of the table the specified field is in
mysql_field_type(iresource result, int field_offset) Get the type of the specified field in a result
mysql_free_result(resource result) Free result memory
mysql_get_client_info(void) Get MySQL client info
mysql_get_host_info([resource link_identifier]) Get MySQL host info
mysql_get_proto_info([resource link_identifier]) Get MySQL protocol info
mysql_get_server_info([resource link_identifier]) Get MySQL server info
mysql_change_user(string user, string password [, string database [, resource link_identifier]]) Change logged in user of the active connection
mysql_character_set_name([resource link_identifier]) Returns the name of the character set
mysql_info([resource link_identifier]) Get information about the most recent query
mysql_insert_id([resource link_identifier]) Get the id generated from the previous INSERT operation
mysql_list_dbs([resource link_identifier]) List databases available on a MySQL server
mysql_list_fields(string database_name, string table_name [, resource link_identifier]) List MySQL result fields
mysql_list_processes([resource link_identifier]) List MySQL processes
mysql_list_tables(string database [, resource link_identifier]) List tables in a MySQL database
mysql_num_fields(resource result) Get number of fields in result
mysql_num_rows(resource result) Get number of rows in result
mysql_pconnect([string server [, string username [, string password]]]) Open a persistent connection to a MySQL server
mysql_ping([resource link_identifier]) Ping a server connection or reconnect if there is no connection
mysql_query(string query [, resource link_identifier [, int result_mode]]) Send a MySQL query
mysql_real_escape_string(string unescaped_string [, resource link_identifier]) Escapes special characters in a string for use in a SQL statement, taking into account the current charset of the connection.
mysql_result(resource result, int row [, mixed field]) Get result data
mysql_select_db(string database_name [, resource link_identifier]) Select a MySQL database
mysql_stat([resource link_identifier]) Get current system status
mysql_tablename(resource result, int i) Get table name of field
mysql_thread_id([resource link_identifier]) Return the current thread id
mysql_unbuffered_query(string query [, resource link_identifier [, int result_mode]]) Send an SQL query to MySQL, without fetching and buffering the result rows
natcasesort(array array) Sort an array using a case insensitive "natural order" algorithm
natsort(array array) Sort an array using a "natural order" algorithm
ncurses_addch(int ch) Add character at current position and advance cursor
ncurses_addchnstr(string s, int n) Add attributed string with specified length at current position
ncurses_addchstr(string s) Add attributed string at current position
ncurses_addnstr(string s, int n) Add string with specified length at current position
ncurses_addstr(string text) Output text at current position
ncurses_assume_default_colors(int fg, int bg) Define default colors for color 0
ncurses_attroff(int attributes) Turn off the given attributes
ncurses_attron(int attributes) Turn on the given attributes
ncurses_attrset(int attributes) Set given attributes
ncurses_baudrate(void) Returns baudrate of terminal
ncurses_beep(void) Let the terminal beep
ncurses_bkgd(int attrchar) Set background property for terminal screen
ncurses_bkgdset(int attrchar) Control screen background
ncurses_border(int left, int right, int top, int bottom, int tl_corner, int tr_corner, int bl_corner, int br_corner) Draw a border around the screen using attributed characters
ncurses_can_change_color(void) Check if we can change terminals colors
ncurses_cbreak(void) Switch of input buffering
ncurses_clear(void) Clear screen
ncurses_clrtobot(void) Clear screen from current position to bottom
ncurses_clrtoeol(void) Clear screen from current position to end of line
ncurses_color_set(int pair) Set fore- and background color
ncurses_curs_set(int visibility) Set cursor state
ncurses_def_prog_mode(void) Saves terminals (program) mode
ncurses_def_shell_mode(void) Saves terminals (shell) mode
ncurses_define_key(string definition, int keycode) Define a keycode
ncurses_delay_output(int milliseconds) Delay output on terminal using padding characters
ncurses_deleteln(void) Delete line at current position, move rest of screen up
ncurses_delch(void) Delete character at current position, move rest of line left
ncurses_delwin(resource window) Delete a ncurses window
ncurses_doupdate(void) Write all prepared refreshes to terminal
ncurses_echo(void) Activate keyboard input echo
ncurses_echochar(int character) Single character output including refresh
ncurses_end(void) Stop using ncurses, clean up the screen
ncurses_erase(void) Erase terminal screen
ncurses_erasechar(void) Returns current erase character
ncurses_filter(void) 
ncurses_flash(void) Flash terminal screen (visual bell)
ncurses_flushinp(void) Flush keyboard input buffer
ncurses_getch(void) Read a character from keyboard
ncurses_getmouse(array mevent) Reads mouse event
ncurses_halfdelay(int tenth) Put terminal into halfdelay mode
ncurses_has_colors(void) Check if terminal has colors
ncurses_has_ic(void) Check for insert- and delete-capabilities
ncurses_has_il(void) Check for line insert- and delete-capabilities
ncurses_has_key(int keycode) Check for presence of a function key on terminal keyboard
ncurses_hline(int charattr, int n) Draw a horizontal line at current position using an attributed character and max. n characters long
ncurses_inch(void) Get character and attribute at current position
ncurses_init(void) Initialize ncurses
ncurses_init_color(int color, int r, int g, int b) Set new RGB value for color
ncurses_init_pair(int pair, int fg, int bg) Allocate a color pair
ncurses_insdelln(int count) Insert lines before current line scrolling down (negative numbers delete and scroll up)
ncurses_insertln(void) Insert a line, move rest of screen down
ncurses_insch(int character) Insert character moving rest of line including character at current position
ncurses_insstr(string text) Insert string at current position, moving rest of line right
ncurses_instr(string buffer) Reads string from terminal screen
ncurses_isendwin(void) Ncurses is in endwin mode, normal screen output may be performed
ncurses_keyok(int keycode, bool enable) Enable or disable a keycode
ncurses_killchar(void) Returns current line kill character
ncurses_longname(void) Returns terminals description
ncurses_mouseinterval(int milliseconds) Set timeout for mouse button clicks
ncurses_mousemask(int newmask, int oldmask) Sets mouse options
ncurses_move(int y, int x) Move output position
ncurses_mvaddch(int y, int x, int c) Move current position and add character
ncurses_mvaddchnstr(int y, int x, string s, int n) Move position and add attrributed string with specified length
ncurses_mvaddchstr(int y, int x, string s) Move position and add attributed string
ncurses_mvaddnstr(int y, int x, string s, int n) Move position and add string with specified length
ncurses_mvaddstr(int y, int x, string s) Move position and add string
ncurses_mvcur(int old_y, int old_x, int new_y, int new_x) Move cursor immediately
ncurses_mvdelch(int y, int x) Move position and delete character, shift rest of line left
ncurses_mvgetch(int y, int x) Move position and get character at new position
ncurses_mvhline(int y, int x, int attrchar, int n) Set new position and draw a horizontal line using an attributed character and max. n characters long
ncurses_mvinch(int y, int x) Move position and get attributed character at new position
ncurses_mvvline(int y, int x, int attrchar, int n) Set new position and draw a vertical line using an attributed character and max. n characters long
ncurses_mvwaddstr(resource window, int y, int x, string text) Add string at new position in window
ncurses_napms(int milliseconds) Sleep
ncurses_newwin(int rows, int cols, int y, int x) Create a new window
ncurses_nl(void) Translate newline and carriage return / line feed
ncurses_nocbreak(void) Switch terminal to cooked mode
ncurses_noecho(void) Switch off keyboard input echo
ncurses_nonl(void) Do not translate newline and carriage return / line feed
ncurses_noqiflush(void) Do not flush on signal characters
ncurses_noraw(void) Switch terminal out of raw mode
ncurses_putp(string text) 
ncurses_qiflush(void) Flush on signal characters
ncurses_raw(void) Switch terminal into raw mode
ncurses_refresh(int ch) Refresh screen
ncurses_resetty(void) Restores saved terminal state
ncurses_savetty(void) Saves terminal state
ncurses_scr_dump(string filename) Dump screen content to file
ncurses_scr_init(string filename) Initialize screen from file dump
ncurses_scr_restore(string filename) Restore screen from file dump
ncurses_scr_set(string filename) Inherit screen from file dump
ncurses_scrl(int count) Scroll window content up or down without changing current position
ncurses_slk_attr(void) Returns current soft label key attribute
ncurses_slk_attroff(int intarg) 
ncurses_slk_attron(int intarg) 
ncurses_slk_attrset(int intarg) 
ncurses_slk_clear(void) Clears soft labels from screen
ncurses_slk_color(int intarg) Sets color for soft label keys
ncurses_slk_init(int format) Initializes soft label key functions
ncurses_slk_noutrefresh(void) Copies soft label keys to virtual screen
ncurses_slk_refresh(void) Copies soft label keys to screen
ncurses_slk_restore(void) Restores soft label keys
ncurses_slk_touch(void) Fources output when ncurses_slk_noutrefresh is performed
ncurses_standend(void) Stop using 'standout' attribute
ncurses_standout(void) Start using 'standout' attribute
ncurses_start_color(void) Start using colors
ncurses_termattrs(void) Returns a logical OR of all attribute flags supported by terminal
ncurses_termname(void) Returns terminals (short)-name
ncurses_timeout(int millisec) Set timeout for special key sequences
ncurses_typeahead(int fd) Specify different filedescriptor for typeahead checking
ncurses_ungetch(int keycode) Put a character back into the input stream
ncurses_ungetmouse(array mevent) Pushes mouse event to queue
ncurses_use_default_colors(void) Assign terminal default colors to color id -1
ncurses_use_env(bool flag) Control use of environment information about terminal size
ncurses_use_extended_names(bool flag) Control use of extended names in terminfo descriptions
ncurses_vidattr(int intarg) 
ncurses_vline(int charattr, int n) Draw a vertical line at current position using an attributed character and max. n characters long
ncurses_wrefresh(resource window) Refresh window on terminal screen
next(array array) Advance the internal array pointer of an array
ngettext(string msgid1, string msgid2, int n) Plural version of gettext
nl_langinfo(int item) Query language and locale information
nl2br(string string) Inserts HTML line breaks before all newlines in a string
notes_body(string server, string mailbox, int msg_number) Open the message msg_number in the specified mailbox on the specified server (leave serv
notes_copy_db(string from_database_name, string to_database_name) Create a note using form form_name
notes_create_db(string database_name) Create a Lotus Notes database
notes_create_note(string database_name, string form_name) Create a note using form form_name
notes_drop_db(string database_name) Drop a Lotus Notes database
notes_find_note(string database_name, string name [, string type]) Returns a note id found in database_name. Specify the name of the note. Leaving type bla
notes_header_info(string server, string mailbox, int msg_number) Open the message msg_number in the specified mailbox on the specified server (leave serv
notes_list_msgs(string db) Returns the notes from a selected database_name
notes_mark_read(string database_name, string user_name, string note_id) Mark a note_id as read for the User user_name
notes_mark_unread(string database_name, string user_name, string note_id) Mark a note_id as unread for the User user_name
notes_nav_create(string database_name, string name) Create a navigator name, in database_name
notes_search(string database_name, string keywords) Find notes that match keywords in database_name
notes_unread(string database_name, string user_name) Returns the unread note id's for the current User user_name
notes_version(string database_name) Get the version Lotus Notes
number_format(float number [, int decimals [, string dec_point [, string thousands_sep]]]) Format a number with grouped thousands
ob_clean(void) Clean (erase) the output buffer
ob_end_clean(void) Clean (erase) the output buffer and turn off output buffering
ob_end_flush(void) Flush (send) the output buffer and turn off output buffering
ob_flush(void) Flush (send) the output buffer
ob_get_contents(void) Return the contents of the output buffer
ob_get_length(void) Return the length of the output buffer
ob_get_level(void) Return the nesting level of the output buffering mechanism
ob_gzhandler(string buffer [, int mode]) ob_start callback function to gzip output buffer
ob_iconv_handler(string contents, int status) Convert character encoding as output buffer handler
ob_implicit_flush([int flag]) Turn implicit flush on/off
ob_start([string output_callback]) Turn on output buffering
OCIBindByName(int stmt, string ph_name, mixed & variable, int length [, int type]) Bind a PHP variable to an Oracle Placeholder
OCICancel(int stmt) Cancel reading from cursor
OCICollAppend(object collection, object object) Coming soon
OCICollAssign(object collection, object object) Coming soon
OCICollAssignElem(object collection, string ndx, string val) Coming soon
OCICollGetElem(object collection, string ndx) Coming soon
OCICollMax(object collection) Coming soon
OCICollSize(object collection) Coming soon
OCICollTrim(object collection, int num) Coming soon
OCIColumnIsNULL(int stmt, mixed column) Test whether a result column is NULL
OCIColumnName(int stmt, int col) Returns the name of a column
OCIColumnPrecision(int stmt, int col) Coming soon
OCIColumnScale(int stmt, int col) Coming soon
OCIColumnSize(int stmt, mixed column) Return result column size
OCIColumnType(int stmt, int col) Returns the data type of a column
OCIColumnTypeRaw(int stmt, int col) Coming soon
OCICommit(int connection) Commits outstanding transactions
OCIDefineByName(int stmt, string Column-Name, mixed variable [, int type]) Use a PHP variable for the define-step during a SELECT
OCIError([int stmt|conn|global]) Return the last error of stmt|conn|global
OCIExecute(int statement [, int mode]) Execute a statement
OCIFetch(int statement) Fetches the next row into result-buffer
OCIFetchInto(int stmt, array & result [, int mode]) Fetches the next row into result-array
OCIFetchStatement(int stmt, array & variable) Fetch all rows of result data into an array
OCIFreeCollection(object lob) Coming soon
OCIFreeCursor(int stmt) Free all resources associated with a cursor
OCIFreeDesc(object lob) Deletes a large object descriptor
OCIFreeStatement(int stmt) Free all resources associated with a statement
OCIInternalDebug(int onoff) Enables or disables internal debug output
OCILoadLob(object lob) Coming soon
OCILogOff(int connection) Disconnects from Oracle
OCILogon(string username, string password [, string db]) Establishes a connection to Oracle
OCINewCollection(int conn, string tdo [, string shema]) Coming soon
OCINewCursor(int conn) Return a new cursor (Statement-Handle)
OCINewDescriptor(int connection [, int type]) Initialize a new empty LOB or FILE descriptor
OCINLogon(string username, string password [, string db]) Establishes a new connection to Oracle
OCINumCols(int stmt) Return the number of result columns in a statement
OCIParse(int conn, string query) Parse a query and return a statement
OCIPLogon(string username, string password [, string db]) Connect to an Oracle database using a persistent connection
OCIResult(int statement, mixed column) Returns column value for fetched row
OCIRollback(int connection) Rolls back outstanding transactions
OCIRowCount(int statement) Gets the number of affected rows
OCISaveLob(object lob) Coming soon
OCISaveLobFile(object lob) Coming soon
OCIServerVersion(int conn) Return a string containing server version information
OCISetPrefetch(int stmt, int rows) Sets number of rows to be prefetched
OCIStatementType(int stmt) Return the type of an OCI statement
OCIWriteLobToFile(object lob [, string filename [, int start [, int lenght]]]) Coming soon
octdec(string octal_string) Octal to decimal
odbc_autocommit(resource connection_id [, bool OnOff]) Toggle autocommit behaviour
odbc_binmode(resource result_id, int mode) Handling of binary column data
odbc_close(resource connection_id) Close an ODBC connection
odbc_close_all(void) Close all ODBC connections
odbc_columnprivileges(resource connection_id [, string qualifier [, string owner [, string table_name [, string column_name]]]]) Returns a result identifier that can be used to fetch a list of columns and associated privileges
odbc_columns(resource connection_id [, string qualifier [, string owner [, string table_name [, string column_name]]]]) Lists the column names in specified tables. Returns a result identifier containing the information.
odbc_commit(resource connection_id) Commit an ODBC transaction
odbc_connect(string dsn, string user, string password [, int cursor_type]) Connect to a datasource
odbc_cursor(resource result_id) Get cursorname
odbc_do(resource conn_id, string query) Synonym for odbc_exec()
odbc_error([resource connection_id]) Get the last error code
odbc_errormsg([resource connection_id]) Get the last error message
odbc_exec(resource connection_id, string query_string) Prepare and execute a SQL statement
odbc_execute(resource result_id [, array parameters_array]) Execute a prepared statement
odbc_fetch_array(resource result [, int rownumber]) Fetch a result row as an associative array
odbc_fetch_into(resource result_id [, int rownumber, array result_array]) Fetch one result row into array
odbc_fetch_object(resource result [, int rownumber]) Fetch a result row as an object
odbc_fetch_row(resource result_id [, int row_number]) Fetch a row
odbc_field_len(resource result_id, int field_number) Get the length (precision) of a field
odbc_field_name(resource result_id, int field_number) Get the columnname
odbc_field_num(resource result_id, string field_name) Return column number
odbc_field_precision(resource result_id, int field_number) Synonym for odbc_field_len()
odbc_field_scale(resource result_id, int field_number) Get the scale of a field
odbc_field_type(resource result_id, int field_number) Datatype of a field
odbc_foreignkeys(resource connection_id, string pk_qualifier, string pk_owner, string pk_table, string fk_qualifier, string fk_owner, string fk_table) Returns a list of foreign keys in the specified table or a list of foreign keys in other tables that refer to the primary key in the specified table
odbc_free_result(resource result_id) Free resources associated with a result
odbc_gettypeinfo(resource connection_id [, int data_type]) Returns a result identifier containing information about data types supported by the data source.
odbc_longreadlen(resource result_id, int length) Handling of LONG columns
odbc_next_result(resource result_id) Checks if multiple results are avaiable
odbc_num_fields(resource result_id) Number of columns in a result
odbc_num_rows(resource result_id) Number of rows in a result
odbc_pconnect(string dsn, string user, string password [, int cursor_type]) Open a persistent database connection
odbc_prepare(resource connection_id, string query_string) Prepares a statement for execution
odbc_primarykeys(resource connection_id, string qualifier, string owner, string table) Returns a result identifier that can be used to fetch the column names that comprise the primary key for a table
odbc_procedurecolumns(resource connection_id [, string qualifier [, string owner [, string proc [, string column]]]]) Retrieve information about parameters to procedures
odbc_procedures(resource connection_id [, string qualifier [, string owner [, string name]]]) Get the list of procedures stored in a specific data source. Returns a result identifier containing the information.
odbc_result(resource result_id, mixed field) Get result data
odbc_result_all(resource result_id [, string format]) Print result as HTML table
odbc_rollback(resource connection_id) Rollback a transaction
odbc_setoption(resource id, int function, int option, int param) Adjust ODBC settings. Returns FALSE if an error occurs, otherwise TRUE.
odbc_specialcolumns(resource connection_id, int type, string qualifier, string owner, string table, int scope, int nullable) Returns either the optimal set of columns that uniquely identifies a row in the table or columns that are automatically updated when any value in the row is updated by a transaction
odbc_statistics(resource connection_id, string qualifier, string owner, string table_name, int unique, int accuracy) Retrieve statistics about a table
odbc_tableprivileges(resource connection_id [, string qualifier [, string owner [, string name]]]) Lists tables and the privileges associated with each table
odbc_tables(resource connection_id [, string qualifier [, string owner [, string name [, string types]]]]) Get the list of table names stored in a specific data source. Returns a result identifier containing the information.
opendir(string path) open directory handle
openlog(string ident, int option, int facility) Open connection to system logger
openssl_csr_export(resource csr, string out [, bool notext]) Exports a CSR to file or a var
openssl_csr_export_to_file(resource csr, string outfilename [, bool notext]) Exports a CSR to file or a var
openssl_csr_new(array dn, resource privkey [, array extraattribs [, array configargs]]) Generates a privkey and CSR
openssl_csr_sign(mixed csr, mixed x509, mixed priv_key, long days) Signs a cert with another CERT
openssl_error_string(void) Return openSSL error message
openssl_free_key(resource key_identifier) Free key resource
openssl_get_privatekey(mixed key [, string passphrase]) Prepare a PEM formatted private key for use
openssl_get_publickey(mixed certificate) Extract public key from certificate and prepare it for use
openssl_open(string sealed_data, string open_data, string env_key, mixed priv_key_id) Open sealed data
openssl_pkcs7_decrypt(string infilename, string outfilename, mixed recipcert, mixed recipkey) Decrypts an S/MIME encrypted message
openssl_pkcs7_encrypt(string infilename, string outfilename, mixed recipcerts, array headers [, long flags]) Encrypt an S/MIME message
openssl_pkcs7_sign(string infilename, string outfilename, mixed signcert, mixed privkey, array headers [, long flags [, string extracertsfilename]]) sign an S/MIME message
openssl_pkcs7_verify(string filename, int flags [, string outfilename [, array cainfo [, string extracerts]]]) Verifies the signature of an S/MIME signed message
openssl_pkey_export(mixed key, mixed out [, string passphrase [, array config_args]]) Gets an exportable representation of a key into a string or file
openssl_pkey_export_to_file(mixed key, string outfilename [, string passphrase [, array config_args]]) Gets an exportable representation of a key into a file
openssl_pkey_new([array configargs]) Generates a new private key
openssl_private_decrypt(string data, string crypted, mixed key [, int padding]) Decrypts data with private key
openssl_private_encrypt(string data, string crypted, mixed key [, int padding]) Encrypts data with private key
openssl_public_decrypt(string data, string crypted, resource key [, int padding]) Decrypts data with public key
openssl_public_encrypt(string data, string crypted, mixed key [, int padding]) Encrypts data with public key
openssl_seal(string data, string sealed_data, array env_keys, array pub_key_ids) Seal (encrypt) data
openssl_sign(string data, string signature, mixed priv_key_id) Generate signature
openssl_verify(string data, string signature, mixed pub_key_id) Verify signature
openssl_x509_export(mixed x509, string outfilename [, bool notext]) Exports a CERT to file or a var
openssl_x509_export_to_file(mixed x509, string outfilename [, bool notext]) Exports a CERT to file or a var
openssl_x509_free(resource x509cert) Free certificate resource
openssl_x509_check_private_key(mixed cert, mixed key) Checks if a private key corresponds to a CERT
openssl_x509_checkpurpose(mixed x509cert, int purpose, array cainfo [, string untrustedfile]) Verifies if a certificate can be used for a particular purpose
openssl_x509_parse(mixed x509cert [, bool shortnames]) Parse an X509 certificate and return the information as an array
openssl_x509_read(mixed x509certdata) Parse an X.509 certificate and return a resource identifier for it
Ora_Bind(int cursor, string PHP variable name, string SQL parameter name, int length [, int type]) bind a PHP variable to an Oracle parameter
Ora_Close(int cursor) close an Oracle cursor
Ora_ColumnName(int cursor, int column) get name of Oracle result column
Ora_ColumnSize(int cursor, int column) get size of Oracle result column
Ora_ColumnType(int cursor, int column) get type of Oracle result column
Ora_Commit(int conn) commit an Oracle transaction
Ora_CommitOff(int conn) disable automatic commit
Ora_CommitOn(int conn) enable automatic commit
Ora_Do(int conn, string query) Parse, Exec, Fetch
Ora_Error(int cursor_or_connection) get Oracle error message
Ora_ErrorCode(int cursor_or_connection) get Oracle error code
Ora_Exec(int cursor) execute parsed statement on an Oracle cursor
Ora_Fetch(int cursor) fetch a row of data from a cursor
Ora_Fetch_Into(int cursor, array result [, int flags]) Fetch a row into the specified result array
Ora_GetColumn(int cursor, mixed column) get data from a fetched column
Ora_Logoff(int connection) close an Oracle connection
Ora_Logon(string user, string password) open an Oracle connection
Ora_Numcols(int cursor_ind) Returns the number of columns
Ora_Numrows(int cursor_ind) Returns the number of rows
Ora_Open(int connection) open an Oracle cursor
Ora_Parse(int cursor_ind, string sql_statement, int defer) parse an SQL statement
Ora_pLogon(string user, string password) Open a persistent Oracle connection
Ora_Rollback(int connection) roll back transaction
ord(string string) Return ASCII value of character
overload([string class_name]) Enable property and method call overloading for a class
ovrimos_close(int connection) Closes the connection to ovrimos
ovrimos_commit(int connection_id) Commits the transaction
ovrimos_connect(string host, string db, string user, string password) Connect to the specified database
ovrimos_cursor(int result_id) Returns the name of the cursor
ovrimos_exec(int connection_id, string query) Executes an SQL statement
ovrimos_execute(int result_id [, array parameters_array]) Executes a prepared SQL statement
ovrimos_fetch_into(int result_id, array result_array [, string how [, int rownumber]]) Fetches a row from the result set
ovrimos_fetch_row(int result_id [, int how [, int row_number]]) Fetches a row from the result set
ovrimos_field_len(int result_id, int field_number) Returns the length of the output column
ovrimos_field_name(int result_id, int field_number) Returns the output column name
ovrimos_field_num(int result_id, string field_name) Returns the (1-based) index of the output column
ovrimos_field_type(int result_id, int field_number) Returns the (numeric) type of the output column
ovrimos_free_result(int result_id) Frees the specified result_id
ovrimos_longreadlen(int result_id, int length) Specifies how many bytes are to be retrieved from long datatypes
ovrimos_num_fields(int result_id) Returns the number of columns
ovrimos_num_rows(int result_id) Returns the number of rows affected by update operations
ovrimos_prepare(int connection_id, string query) Prepares an SQL statement
ovrimos_result(int result_id, mixed field) Retrieves the output column
ovrimos_result_all(int result_id [, string format]) Prints the whole result set as an HTML table
ovrimos_rollback(int connection_id) Rolls back the transaction
pack(string format [, mixed args]) Pack data into binary string.
parse_ini_file(string filename [, bool process_sections]) Parse a configuration file
parse_str(string str [, array arr]) Parses the string into variables
parse_url(string url) Parse a URL and return its components
passthru(string command [, int return_var]) Execute an external program and display raw output
pathinfo(string path) Returns information about a file path
pclose(int fp) Closes process file pointer
pcntl_exec(string path [, array args [, array envs]]) Executes specified program in current process space
pcntl_fork(void) Forks the currently running process
pcntl_signal(int signo, mixed handle) Installs a signal handler
pcntl_waitpid(int pid, int status, int options) Waits on or returns the status of a forked child
pcntl_wexitstatus(int status) Returns the return code of a terminated child
pcntl_wifexited(int status) Returns TRUE if status code represents a successful exit
pcntl_wifsignaled(int status) Returns TRUE if status code represents a termination due to a signal
pcntl_wifstopped(int status) Returns TRUE if child process is currently stopped
pcntl_wstopsig(int status) Returns the signal which caused the child to stop
pcntl_wtermsig(int status) Returns the signal which caused the child to terminate
pdf_add_annotation(?) Deprecated: Adds annotation
pdf_add_bookmark(int pdf object, string text [, int parent [, int open]]) Adds bookmark for current page
pdf_add_launchlink(int pdf object, float llx, float lly, float urx, float ury, string filename) Add a launch annotation for current page
pdf_add_locallink(int pdf object, float llx, float lly, float urx, float ury, int page, string dest) Add a link annotation for current page
pdf_add_note(int pdf object, float llx, float lly, float urx, float ury, string contents, string title, string icon, int open) Add a note annotation for current page
pdf_add_outline(?) Deprecated: Adds bookmark for current page
pdf_add_pdflink(int pdf object, float llx, float lly, float urx, float ury, string filename, int page, string dest) Adds file link annotation for current page
pdf_add_thumbnail(int pdf object, int image) Adds thumbnail for current page
pdf_add_weblink(int pdf object, float llx, float lly, float urx, float ury, string url) Adds weblink for current page
pdf_arc(resource pdf object, float x, float y, float r, float alpha, float beta) Draws an arc (counterclockwise)
pdf_arcn(resource pdf object, float x, float y, float r, float alpha, float beta) Draws an arc (clockwise)
pdf_attach_file(int pdf object, float llx, float lly, float urx, float ury, string filename, string description, string author, string mimetype, string icon) Adds a file attachement for current page
pdf_begin_page(int pdf object, float width, float height) Starts new page
pdf_begin_pattern(int pdf object, float width, float height, float xstep, float ystep, int painttype) Starts new pattern
pdf_begin_template(int pdf object, float width, float height) Starts new template
pdf_circle(int pdf object, float x, float y, float r) Draws a circle
pdf_clip(int pdf object) Clips to current path
pdf_close(int pdf object) Closes a pdf object
pdf_close_image(int pdf object, int image) Closes an image
pdf_close_pdi(int pdf object, int dochandle) Close the input PDF document
pdf_close_pdi_page(int pdf object, int pagehandle) Close the page handle
pdf_closepath(int pdf object) Closes path
pdf_closepath_fill_stroke(int pdf object) Closes, fills and strokes current path
pdf_closepath_stroke(int pdf object) Closes path and draws line along path
pdf_concat(int pdf object, float a, float b, float c, float d, float e, float f) Concatenate a matrix to the CTM
pdf_continue_text(int pdf object, string text) Outputs text in next line
pdf_curveto(int pdf object, float x1, float y1, float x2, float y2, float x3, float y3) Draws a curve
pdf_delete(int pdf object) Deletes a PDF object
pdf_end_page(int pdf object) Ends a page
pdf_end_pattern(int pdf object) Finish pattern
pdf_end_template(int pdf object) Finish template
pdf_endpath(?) Deprecated: Ends current path
pdf_fill(int pdf object) Fills current path
pdf_fill_stroke(int pdf object) Fills and strokes current path
pdf_findfont(int pdf object, string fontname, string encoding, int embed) Prepare font for later use with pdf_setfont().
pdf_get_buffer(int pdf object) Fetch the buffer containig the generated PDF data.
pdf_get_font(?) Deprecated: font handling
pdf_get_fontname(?) Deprecated: font handling
pdf_get_fontsize(?) Deprecated: font handling
pdf_get_image_height(int pdf object, int image) Returns height of an image
pdf_get_image_width(int pdf object, int image) Returns width of an image
pdf_get_majorversion(void) Returns the major version number of the PDFlib
pdf_get_minorversion(void) Returns the minor version number of the PDFlib
pdf_get_parameter(int pdf object, string key [, float modifier]) Gets certain parameters
pdf_get_pdi_parameter(int pdf object, string key, int doc, int page, int index) Get some PDI string parameters
pdf_get_pdi_value(int pdf object, string key, int doc, int page, int index) Gets some PDI numerical parameters
pdf_get_value(int pdf object, string key [, float modifier]) Gets certain numerical value
pdf_initgraphics(int pdf object) Resets graphic state
pdf_lineto(int pdf object, float x, float y) Draws a line
pdf_makespotcolor(int pdf object, string spotname) Makes a spotcolor
pdf_moveto(int pdf object, float x, float y) Sets current point
pdf_new() Creates a new pdf object
pdf_open(?) Deprecated: Open a new pdf object
pdf_open_CCITT(int pdf object, string filename, int width, int height, int BitReverse, int k, int Blackls1) Opens a new image file with raw CCITT data
pdf_open_file(int pdf object [, string filename]) Opens a new pdf object
pdf_open_gif(?) Deprecated: Opens a GIF image
pdf_open_image(int PDF-document, string imagetype, string source, string data, long length, int width, int height, int components, int bpc, string params) Versatile function for images
pdf_open_image_file(int PDF-document, string imagetype, string filename [, string stringparam [, string intparam]]) Reads an image from a file
pdf_open_jpeg(?) Deprecated: Opens a JPEG image
pdf_open_memory_image(int pdf object, int image) Opens an image created with PHP's image functions
pdf_open_pdi(int pdf object, string filename, string stringparam, int intparam) Opens a PDF file
pdf_open_pdi_page(int pdf object, int dochandle, int pagenumber, string pagelabel) Prepare a page
pdf_open_png(?) Deprecated: Opens a PNG image
pdf_open_tiff(int PDF-document, string filename) Deprecated: Opens a TIFF image
pdf_place_image(int pdf object, int image, float x, float y, float scale) Places an image on the page
pdf_place_pdi_page(int pdf object, int page, float x, float y, float sx, float sy) Places an image on the page
pdf_rect(int pdf object, float x, float y, float width, float height) Draws a rectangle
pdf_restore(int pdf object) Restores formerly saved environment
pdf_rotate(int pdf object, float phi) Sets rotation
pdf_save(int pdf object) Saves the current environment
pdf_scale(int pdf object, float x-scale, float y-scale) Sets scaling
pdf_set_border_color(int pdf object, float red, float green, float blue) Sets color of border around links and annotations
pdf_set_border_dash(int pdf object, float black, float white) Sets dash style of border around links and annotations
pdf_set_border_style(int pdf object, string style, float width) Sets style of border around links and annotations
pdf_set_duration(?) Deprecated: Sets duration between pages
pdf_set_font(?) Deprecated: Selects a font face and size
pdf_set_horiz_scaling(int pdf object, float scale) Sets horizontal scaling of text
pdf_set_char_spacing(?) Deprecated: Sets character spacing
pdf_set_info(int pdf object, string key, string value) Fills a field of the document information
pdf_set_info_author(int pdfdoc, string author) Fills the author field of the document
pdf_set_info_creator(int pdfdoc, string creator) Fills the creator field of the document
pdf_set_info_keywords(int pdfdoc, string keywords) Fills the keywords field of the document
pdf_set_info_subject(int pdfdoc, string subject) Fills the subject field of the document
pdf_set_info_title(int pdfdoc, string title) Fills the title field of the document
pdf_set_leading(?) Deprecated: Sets distance between text lines
pdf_set_parameter(int pdf object, string key, string value) Sets certain parameters
pdf_set_text_pos(int pdf object, float x, float y) Sets text position
pdf_set_text_rendering(?) Deprecated: Determines how text is rendered
pdf_set_text_rise(?) Deprecated: Sets the text rise
pdf_set_value(int pdf object, string key, float value) Sets certain numerical value
pdf_set_word_spacing(?) Depriciated: Sets spacing between words
pdf_setcolor(int pdf object, string type, string colorspace, float c1 [, float c2 [, float c3 [, float c4]]]) Sets fill and stroke color
pdf_setdash(int pdf object, float b, float w) Sets dash pattern
pdf_setflat(int pdf object, float flatness) Sets flatness
pdf_setfont(int pdf object, int font, float size) Set the current font
pdf_setgray(int pdf object, float gray) Sets drawing and filling color to gray value
pdf_setgray_fill(int pdf object, float gray) Sets filling color to gray value
pdf_setgray_stroke(int pdf object, float gray) Sets drawing color to gray value
pdf_setlinecap(int pdf object, int linecap) Sets linecap parameter
pdf_setlinejoin(int pdf object, long linejoin) Sets linejoin parameter
pdf_setlinewidth(int pdf object, float width) Sets line width
pdf_setmatrix(int pdf object, float a, float b, float c, float d, float e, float f) Sets current transformation matrix
pdf_setmiterlimit(int pdf object, float miter) Sets miter limit
pdf_setpolydash(int pdf object, float * dasharray) Sets complicated dash pattern
pdf_setrgbcolor(int pdf object, float red value, float green value, float blue value) Sets drawing and filling color to rgb color value
pdf_setrgbcolor_fill(int pdf object, float red value, float green value, float blue value) Sets filling color to rgb color value
pdf_setrgbcolor_stroke(int pdf object, float red value, float green value, float blue value) Sets drawing color to rgb color value
pdf_show(int pdf object, string text) Output text at current position
pdf_show_boxed(int pdf object, string text, float left, float top, float width, float height, string hmode [, string feature]) Output text in a box
pdf_show_xy(int pdf object, string text, float x, float y) Output text at given position
pdf_skew(int pdf object, float alpha, float beta) Skews the coordinate system
pdf_stringwidth(int pdf object, string text [, int font [, float size]]) Returns width of text using current font
pdf_stroke(int pdf object) Draws line along path
pdf_translate(int pdf object, float tx, float ty) Sets origin of coordinate system
pfpro_cleanup(void) Shuts down the Payflow Pro library
pfpro_init(void) Initialises the Payflow Pro library
pfpro_process(array parameters [, string address [, int port [, int timeout [, string proxy address [, int proxy port [, string proxy logon [, string proxy password]]]]]]]) Process a transaction with Payflow Pro
pfpro_process_raw(string parameters [, string address [, int port [, int timeout [, string proxy address [, int proxy port [, string proxy logon [, string proxy password]]]]]]]) Process a raw transaction with Payflow Pro
pfpro_version(void) Returns the version of the Payflow Pro software
pfsockopen(string hostname, int port [, int errno [, string errstr [, int timeout]]]) Open persistent Internet or Unix domain socket connection
pg_affected_rows(resource result) Returns number of affected records(tuples)
pg_cancel_query(resource connection) Cancel async query
pg_client_encoding([resource connection]) Get the client encoding
pg_close(resource connection) Close a PostgreSQL connection
pg_connect(string connection_string) Open a PostgreSQL connection
pg_connection_busy(resource connection) Get connection is busy or not
pg_connection_reset(resource connection) Reset connection (reconnect)
pg_connection_status(resource connection) Get connection status
pg_convert(resource connection, string table_name, array assoc_array [, int options]) Convert associative array value into suitable for SQL statement.
pg_copy_from(int connection, string table_name, array rows [, string delimiter [, string null_as]]) Copy a table from an array
pg_copy_to(int connection, string table_name [, string delimiter [, string null_as]]) Copy a table to an array
pg_dbname(resource connection) Get the database name
pg_delete(resource connection, string table_name, array assoc_array [, int options]) Delete records.
pg_end_copy([resource connection]) Sync with PostgreSQL backend
pg_escape_bytea(string data) Escape binary for bytea type
pg_escape_string(string data) Escape string for text/char type
pg_fetch_array(resource result, int row [, int result_type]) Fetch a row as an array
pg_fetch_object(resource result, int row [, int result_type]) Fetch a row as an object
pg_fetch_result(resource result, int row_number, mixed field) Returns values from a result resource
pg_fetch_row(resource result, int row) Get a row as an enumerated array
pg_field_is_null(resource result, int row, mixed field) Test if a field is NULL
pg_field_name(resource result, int field_number) Returns the name of a field
pg_field_num(resource result, string field_name) Returns the field number of the named field
pg_field_prtlen(resource result, int row_number, string field_name) Returns the printed length
pg_field_size(resource result, int field_number) Returns the internal storage size of the named field
pg_field_type(resource result, int field_number) Returns the type name for the corresponding field number
pg_free_result(resource result) Free result memory
pg_get_result([resource connection]) Get asynchronous query result
pg_host(resource connection) Returns the host name associated with the connection
pg_insert(resource connection, string table_name, array assoc_array [, int options]) Insert array into table.
pg_last_error(resource connection) Get the last error message string of a connection
pg_last_notice(resource connection) Returns the last notice message from PostgreSQL server
pg_last_oid(resource result) Returns the last object's oid
pg_lo_close(resource large_object) Close a large object
pg_lo_create(resource connection) Create a large object
pg_lo_export(int oid, string pathname [, resource connection]) Export a large object to file
pg_lo_import(string pathname [, resource connection]) Import a large object from file
pg_lo_open(resource connection, int oid, string mode) Open a large object
pg_lo_read(resource large_object, int len) Read a large object
pg_lo_read_all(resource large_object) Read a entire large object and send straight to browser
pg_lo_seek(resource large_object, int offset [, int whence]) Seeks position of large object
pg_lo_tell(resource large_object) Returns current position of large object
pg_lo_unlink(resource connection, int oid) Delete a large object
pg_lo_write(resource large_object, string data) Write a large object
pg_metadata(resource connection, string table_name) Get metadata for table.
pg_num_fields(resource result) Returns the number of fields
pg_num_rows(resource result) Returns the number of rows
pg_options(resource connection) Get the options associated with the connection
pg_pconnect(string connection_string) Open a persistent PostgreSQL connection
pg_port(resource connection) Return the port number associated with the connection
pg_put_line([resource connection, string data]) Send a NULL-terminated string to PostgreSQL backend
pg_query(resource connection, string query) Execute a query
pg_result_error(resource result) Get error message associated with result
pg_result_status(resource result) Get status of query result
pg_select(resource connection, string table_name, array assoc_array [, int options]) Select records.
pg_send_query(resource connection, string query) Send asynchronous query
pg_set_client_encoding([resource connection, string encoding]) Set the client encoding
pg_trace(string pathname [, string mode [, resource connection]]) Enable tracing a PostgreSQL connection
pg_tty(resource connection) Return the tty name associated with the connection
pg_untrace([resource connection]) Disable tracing of a PostgreSQL connection
pg_update(resource connection, string table_name, array condition, array data [, int options]) Update table.
php_logo_guid(void) Gets the logo guid
php_sapi_name(void) Returns the type of interface between web server and PHP
php_uname(void) Returns information about the operating system PHP was built on
phpcredits([int flag]) Prints out the credits for PHP
phpinfo([int what]) Outputs lots of PHP information
phpversion(void) Gets the current PHP version
pi(void) Get value of pi
png2wbmp(string pngname, string wbmpname, int d_height, int d_width, int threshold) Convert PNG image file to WBMP image file
popen(string command, string mode) Opens process file pointer
pos(array array) Get the current element from an array
posix_ctermid(void) Get path name of controlling terminal
posix_getcwd(void) Pathname of current directory
posix_getegid(void) Return the effective group ID of the current process
posix_geteuid(void) Return the effective user ID of the current process
posix_getgid(void) Return the real group ID of the current process
posix_getgrgid(int gid) Return info about a group by group id
posix_getgrnam(string name) Return info about a group by name
posix_getgroups(void) Return the group set of the current process
posix_getlogin(void) Return login name
posix_getpgid(int pid) Get process group id for job control
posix_getpgrp(void) Return the current process group identifier
posix_getpid(void) Return the current process identifier
posix_getppid(void) Return the parent process identifier
posix_getpwnam(string username) Return info about a user by username
posix_getpwuid(int uid) Return info about a user by user id
posix_getrlimit(void) Return info about system ressource limits
posix_getsid(int pid) Get the current sid of the process
posix_getuid(void) Return the real user ID of the current process
posix_isatty(int fd) Determine if a file descriptor is an interactive terminal
posix_kill(int pid, int sig) Send a signal to a process
posix_mkfifo(string pathname, int mode) Create a fifo special file (a named pipe)
posix_setegid(int gid) Set the effective GID of the current process
posix_seteuid(int uid) Set the effective UID of the current process
posix_setgid(int gid) Set the GID of the current process
posix_setpgid(int pid, int pgid) set process group id for job control
posix_setsid(void) Make the current process a session leader
posix_setuid(int uid) Set the UID of the current process
posix_times(void) Get process times
posix_ttyname(int fd) Determine terminal device name
posix_uname(void) Get system name
pow(number base, number exp) Exponential expression
preg_grep(string pattern, array input) Return array entries that match the pattern
preg_match(string pattern, string subject [, array matches]) Perform a regular expression match
preg_match_all(string pattern, string subject, array matches [, int order]) Perform a global regular expression match
preg_quote(string str [, string delimiter]) Quote regular expression characters
preg_replace(mixed pattern, mixed replacement, mixed subject [, int limit]) Perform a regular expression search and replace
preg_replace_callback(mixed pattern, mixed callback, mixed subject [, int limit]) Perform a regular expression search and replace using a callback
preg_split(string pattern, string subject [, int limit [, int flags]]) Split string by a regular expression
prev(array array) Rewind the internal array pointer
print(string arg) Output a string
print_r(mixed expression) Prints human-readable information about a variable
printer_abort(resource handle) Deletes the printer's spool file
printer_close(resource handle) Close an open printer connection
printer_create_brush(int style, string color) Create a new brush
printer_create_dc(resource handle) Create a new device context
printer_create_font(string face, int height, int width, int font_weight, bool italic, bool underline, bool strikeout, int orientaton) Create a new font
printer_create_pen(int style, int width, string color) Create a new pen
printer_delete_brush(resource handle) Delete a brush
printer_delete_dc(resource handle) Delete a device context
printer_delete_font(resource handle) Delete a font
printer_delete_pen(resource handle) Delete a pen
printer_draw_bmp(resource handle, string filename, int x, int y) Draw a bmp
printer_draw_elipse(resource handle, int ul_x, int ul_y, int lr_x, int lr_y) Draw an ellipse
printer_draw_chord(resource handle, int rec_x, int rec_y, int rec_x1, int rec_y1, int rad_x, int rad_y, int rad_x1, int rad_y1) Draw a chord
printer_draw_line(resource printer_handle, int from_x, int from_y, int to_x, int to_y) Draw a line
printer_draw_pie(resource handle, int rec_x, int rec_y, int rec_x1, int rec_y1, int rad1_x, int rad1_y, int rad2_x, int rad2_y) Draw a pie
printer_draw_rectangle(resource handle, int ul_x, int ul_y, int lr_x, int lr_y) Draw a rectangle
printer_draw_roundrect(resource handle, int ul_x, int ul_y, int lr_x, int lr_y, int width, int height) Draw a rectangle with rounded corners
printer_draw_text(resource printer_handle, string text, int x, int y) Draw text
printer_end_doc(resource handle) Close document
printer_end_page(resource handle) Close active page
printer_get_option(resource handle, string option) Retrieve printer configuration data
printer_list(int enumtype [, string name [, int level]]) Return an array of printers attached to the server
printer_logical_fontheight(resource handle, int height) Get logical font height
printer_open([string devicename]) Open connection to a printer
printer_select_brush(resource printer_handle, resource brush_handle) Select a brush
printer_select_font(resource printer_handle, resource font_handle) Select a font
printer_select_pen(resource printer_handle, resource pen_handle) Select a pen
printer_set_option(resource handle, int option, mixed value) Configure the printer connection
printer_start_doc(resource handle [, string document]) Start a new document
printer_start_page(resource handle) Start a new page
printer_write(resource handle, string content) Write data to the printer
printf(string format [, mixed args]) Output a formatted string
proc_close(resource process) Close a process opened by proc_open and return the exit code of that process.
proc_open(string cmd, array descriptorspec, array pipes) Execute a command and open file pointers for input/output
pspell_add_to_personal(int dictionary_link, string word) Add the word to a personal wordlist
pspell_add_to_session(int dictionary_link, string word) Add the word to the wordlist in the current session
pspell_clear_session(int dictionary_link) Clear the current session
pspell_config_create(string language [, string spelling [, string jargon [, string encoding]]]) Create a config used to open a dictionary
pspell_config_ignore(int dictionary_link, int n) Ignore words less than N characters long
pspell_config_mode(int dictionary_link, int mode) Change the mode number of suggestions returned
pspell_config_personal(int dictionary_link, string file) Set a file that contains personal wordlist
pspell_config_repl(int dictionary_link, string file) Set a file that contains replacement pairs
pspell_config_runtogether(int dictionary_link, bool flag) Consider run-together words as valid compounds
pspell_config_save_repl(int dictionary_link, bool flag) Determine whether to save a replacement pairs list along with the wordlist
pspell_check(int dictionary_link, string word) Check a word
pspell_new(string language [, string spelling [, string jargon [, string encoding [, int mode]]]]) Load a new dictionary
pspell_new_config(int config) Load a new dictionary with settings based on a given config
pspell_new_personal(string personal, string language [, string spelling [, string jargon [, string encoding [, int mode]]]]) Load a new dictionary with personal wordlist
pspell_save_wordlist(int dictionary_link) Save the personal wordlist to a file
pspell_store_replacement(int dictionary_link, string misspelled, string correct) Store a replacement pair for a word
pspell_suggest(int dictionary_link, string word) Suggest spellings of a word
putenv(string setting) Sets the value of an environment variable
qdom_error(void) Returns the error string from the last QDOM operation or FALSE if no errors occured
qdom_tree(string ) creates a tree of an xml string
quoted_printable_decode(string str) Convert a quoted-printable string to an 8 bit string
quotemeta(string str) Quote meta characters
rad2deg(float number) Converts the radian number to the equivalent number in degrees
rand([int min, int max]) Generate a random value
range(mixed low, mixed high) Create an array containing a range of elements
rawurldecode(string str) Decode URL-encoded strings
rawurlencode(string str) URL-encode according to RFC1738
read_exif_data(string filename, string sections, bool arrays, bool thumbnail) Reads header information stored in TIFF and JPEG images
readdir(resource dir_handle) read entry from directory handle
readfile(string filename [, int use_include_path]) Outputs a file
readgzfile(string filename [, int use_include_path]) Output a gz-file
readline([string prompt]) Reads a line
readline_add_history(string line) Adds a line to the history
readline_clear_history(void) Clears the history
readline_completion_function(string line) Registers a completion function
readline_info([string varname [, string newvalue]]) Gets/sets various internal readline variables
readline_list_history(void) Lists the history
readline_read_history(string filename) Reads the history
readline_write_history(string filename) Writes the history
readlink(string path) Returns the target of a symbolic link
realpath(string path) Returns canonicalized absolute pathname
recode(string request, string string) Recode a string according to a recode request
recode_file(string request, resource input, resource output) Recode from file to file according to recode request
recode_string(string request, string string) Recode a string according to a recode request
register_shutdown_function(string func) Register a function for execution on shutdown
register_tick_function(string func [, mixed arg]) Register a function for execution on each tick
rename(string oldname, string newname) Renames a file
reset(array array) Set the internal pointer of an array to its first element
restore_error_handler(void) Restores the previous error handler function
rewind(int fp) Rewind the position of a file pointer
rewinddir(resource dir_handle) rewind directory handle
rmdir(string dirname) Removes directory
round(float val [, int precision]) Rounds a float
rsort(array array [, int sort_flags]) Sort an array in reverse order
rtrim(string str [, string charlist]) Strip whitespace from the end of a string
sem_acquire(int sem_identifier) Acquire a semaphore
sem_get(int key [, int max_acquire [, int perm]]) Get a semaphore id
sem_release(int sem_identifier) Release a semaphore
sem_remove(int sem_identifier) Remove a semaphore
serialize(mixed value) Generates a storable representation of a value
sesam_affected_rows(string result_id) Get number of rows affected by an immediate query
sesam_commit(void) Commit pending updates to the SESAM database
sesam_connect(string catalog, string schema, string user) Open SESAM database connection
sesam_diagnostic(void) Return status information for last SESAM call
sesam_disconnect(void) Detach from SESAM connection
sesam_errormsg(void) Returns error message of last SESAM call
sesam_execimm(string query) Execute an "immediate" SQL-statement
sesam_fetch_array(string result_id [, int whence [, int offset]]) Fetch one row as an associative array
sesam_fetch_result(string result_id [, int max_rows]) Return all or part of a query result
sesam_fetch_row(string result_id [, int whence [, int offset]]) Fetch one row as an array
sesam_field_array(string result_id) Return meta information about individual columns in a result
sesam_field_name(string result_id, int index) Return one column name of the result set
sesam_free_result(string result_id) Releases resources for the query
sesam_num_fields(string result_id) Return the number of fields/columns in a result set
sesam_query(string query [, bool scrollable]) Perform a SESAM SQL query and prepare the result
sesam_rollback(void) Discard any pending updates to the SESAM database
sesam_seek_row(string result_id, int whence [, int offset]) Set scrollable cursor mode for subsequent fetches
sesam_settransaction(int isolation_level, int read_only) Set SESAM transaction parameters
session_cache_expire([int new_cache_expire]) Return current cache expire
session_cache_limiter([string cache_limiter]) Get and/or set the current cache limiter
session_decode(string data) Decodes session data from a string
session_destroy(void) Destroys all data registered to a session
session_encode(void) Encodes the current session data as a string
session_get_cookie_params(void) Get the session cookie parameters
session_id([string id]) Get and/or set the current session id
session_is_registered(string name) Find out if a variable is registered in a session
session_module_name([string module]) Get and/or set the current session module
session_name([string name]) Get and/or set the current session name
session_readonly(void) Begin session - reinitializes freezed variables, but no writeback on request end
session_register(mixed name [, mixed ...]) Register one or more variables with the current session
session_save_path([string path]) Get and/or set the current session save path
session_set_cookie_params(int lifetime [, string path [, string domain [, bool secure]]]) Set the session cookie parameters
session_set_save_handler(string open, string close, string read, string write, string destroy, string gc) Sets user-level session storage functions
session_start(void) Initialize session data
session_unregister(string name) Unregister a variable from the current session
session_unset(void) Free all session variables
session_write_close(void) Write session data and end session
set_error_handler(string error_handler) Sets a user-defined error handler function.
set_file_buffer(int fp, int buffer) Sets file buffering on the given file pointer
set_magic_quotes_runtime(int new_setting) Sets the current active configuration setting of magic_quotes_runtime
set_time_limit(int seconds) Limits the maximum execution time
setcookie(string name [, string value [, int expire [, string path [, string domain [, int secure]]]]]) Send a cookie
setlocale(mixed category, string locale) Set locale information
settype(mixed var, string type) Set the type of a variable
shell_exec(string cmd) Execute command via shell and return complete output as string
shm_attach(int key [, int memsize [, int perm]]) Creates or open a shared memory segment
shm_detach(int shm_identifier) Disconnects from shared memory segment
shm_get_var(int id, int variable_key) Returns a variable from shared memory
shm_put_var(int shm_identifier, int variable_key, mixed variable) Inserts or updates a variable in shared memory
shm_remove(int shm_identifier) Removes shared memory from Unix systems
shm_remove_var(int id, int variable_key) Removes a variable from shared memory
shmop_close(int shmid) Close shared memory block
shmop_delete(int shmid) Delete shared memory block
shmop_open(int key, string flags, int mode, int size) Create or open shared memory block
shmop_read(int shmid, int start, int count) Read data from shared memory block
shmop_size(int shmid) Get size of shared memory block
shmop_write(int shmid, string data, int offset) Write data into shared memory block
show_source(string filename [, bool return]) Syntax highlighting of a file
shuffle(array array) Shuffle an array
similar_text(string first, string second [, float percent]) Calculate the similarity between two strings
sin(float arg) Sine
sinh(float arg) Hyperbolic sine
sizeof(mixed var) Get the number of elements in variable
sleep(int seconds) Delay execution
snmp_get_quick_print(void) Fetch the current value of the UCD library's quick_print setting
snmp_set_quick_print(bool quick_print) Set the value of quick_print within the UCD SNMP library
snmpget(string hostname, string community, string object_id [, int timeout [, int retries]]) Fetch an SNMP object
snmprealwalk(string host, string community, string object_id [, int timeout [, int retries]]) Return all objects including their respective object id withing the specified one
snmpset(string hostname, string community, string object_id, string type, mixed value [, int timeout [, int retries]]) Set an SNMP object
snmpwalk(string hostname, string community, string object_id [, int timeout [, int retries]]) Fetch all the SNMP objects from an agent
snmpwalkoid(string hostname, string community, string object_id [, int timeout [, int retries]]) Query for a tree of information about a network entity
socket_accept(resource socket) Accepts a connection on a socket
socket_bind(resource socket, string address [, int port]) Binds a name to a socket
socket_close(resource socket) Closes a socket descriptor
socket_connect(resource socket, string address [, int port]) Initiates a connection on a socket
socket_create(int domain, int type, int protocol) Create a socket (endpoint for communication)
socket_create_listen(int port [, int backlog]) Opens a socket on port to accept connections
socket_create_pair(int domain, int type, int protocol, array &fd) Creates a pair of indistinguishable sockets and stores them in fds.
socket_fd_alloc(void) Allocates a new file descriptor set
socket_fd_clear(resource set, mixed socket) Clears (a) file descriptor(s) from a set
socket_fd_free(resource set) Deallocates a file descriptor set
socket_fd_isset(resource set, resource socket) Checks to see if a file descriptor is set within the file descrirptor set
socket_fd_set(resource set, mixed socket) Adds (a) file descriptor(s) to a set
socket_fd_zero(resource set) Clears a file descriptor set
socket_get_status(resource socketstream) Returns information about an existing socket stream
socket_getopt(resource socket, int level, int optname) Gets socket options for the socket
socket_getpeername(resource socket, string &addr [, int &port]) Given an fd, stores a string representing sa.sin_addr and the value of sa.sin_port into addr and port describing the remote side of a socket
socket_getsockname(resource socket, string &addr [, int &port]) Given an fd, stores a string representing sa.sin_addr and the value of sa.sin_port into addr and port describing the local side of a socket
socket_iovec_add(resource iovec, int iov_len) Adds a new vector to the scatter/gather array
socket_iovec_alloc(int num_vectors [, int ]) ...]) Builds a 'struct iovec' for use with sendmsg, recvmsg, writev, and readv
socket_iovec_delete(resource iovec, int iov_pos) Deletes a vector from an array of vectors
socket_iovec_fetch(resource iovec, int iovec_position) Returns the data held in the iovec specified by iovec_id[iovec_position]
socket_iovec_free(resource iovec) Frees the iovec specified by iovec_id
socket_iovec_set(resource iovec, int iovec_position, string new_val) Sets the data held in iovec_id[iovec_position] to new_val
socket_last_error(resource socket) Returns/Clears the last error on the socket
socket_listen(resource socket, int backlog) Listens for a connection on a socket
socket_read(resource socket_des, int length [, int type]) Reads from a socket
socket_readv(resource socket, resource iovec_id) Reads from an fd, using the scatter-gather array defined by iovec_id
socket_recv(resource socket, int len, int flags) Receives data from a connected socket
socket_recvfrom(resource socket, string &buf, int len, int flags, string &name [, int &port]) Receives data from a socket, connected or not
socket_recvmsg(resource socket, resource iovec, array &control, int &controllen, int &flags, string &addr [, int &port]) Used to receive messages on a socket, whether connection-oriented or not
socket_select(resource read_fd, resource write_fd, resource except_fd, int tv_sec [, int tv_usec]) Runs the select() system call on the sets mentioned with a timeout specified by tv_sec and tv_usec
socket_send(resource socket, string buf, int len, int flags) Sends data to a connected socket
socket_sendmsg(resource socket, resource iovec, int flags, string addr [, int port]) Sends a message to a socket, regardless of whether it is connection-oriented or not
socket_sendto(resource socket, string buf, int len, int flags, string addr [, int port]) Sends a message to a socket, whether it is connected or not
socket_set_blocking(int socket descriptor, int mode) Set blocking/non-blocking mode on a socket
socket_set_nonblock(resource socket) Sets nonblocking mode for file descriptor fd
socket_set_timeout(int socket descriptor, int seconds, int microseconds) Set timeout period on a socket
socket_setopt(resource socket, int level, int optname, int ) Sets socket options for the socket
socket_shutdown(resource socket [, int how]) Shuts down a socket for receiving, sending, or both.
socket_strerror(int errno) Return a string describing a socket error
socket_write(resource socket_des, string &buffer, int length) Write to a socket
socket_writev(resource socket, resource iovec_id) Writes to a file descriptor, fd, using the scatter-gather array defined by iovec_id
sort(array array [, int sort_flags]) Sort an array
soundex(string str) Calculate the soundex key of a string
split(string pattern, string string [, int limit]) split string into array by regular expression
spliti(string pattern, string string [, int limit]) Split string into array by regular expression case insensitive
sprintf(string format [, mixed args]) Return a formatted string
sql_regcase(string string) Make regular expression for case insensitive match
sqrt(float arg) Square root
srand(int seed) Seed the random number generator
sscanf(string str, string format [, string var1]) Parses input from a string according to a format
stat(string filename) Gives information about a file
str_pad(string input, int pad_length [, string pad_string [, int pad_type]]) Pad a string to a certain length with another string
str_repeat(string input, int multiplier) Repeat a string
str_replace(mixed search, mixed replace, mixed subject) Replace all occurrences of the search string with the replacement string
str_rot13(string str) Perform the rot13 transform on a string
strcasecmp(string str1, string str2) Binary safe case-insensitive string comparison
strcmp(string str1, string str2) Binary safe string comparison
strcoll(string str1, string str2) Locale based string comparison
strcspn(string str1, string str2) Find length of initial segment not matching mask
strftime(string format [, int timestamp]) Format a local time/date according to locale settings
strchr(string haystack, string needle) Find the first occurrence of a character
strip_tags(string str [, string allowable_tags]) Strip HTML and PHP tags from a string
stripcslashes(string str) Un-quote string quoted with addcslashes()
stripslashes(string str) Un-quote string quoted with addslashes()
stristr(string haystack, string needle) Case-insensitive strstr()
strlen(string str) Get string length
strnatcasecmp(string str1, string str2) Case insensitive string comparisons using a "natural order" algorithm
strnatcmp(string str1, string str2) String comparisons using a "natural order" algorithm
strncasecmp(string str1, string str2, int len) Binary safe case-insensitive string comparison of the first n characters
strncmp(string str1, string str2, int len) Binary safe string comparison of the first n characters
strpos(string haystack, string needle [, int offset]) Find position of first occurrence of a string
strrev(string string) Reverse a string
strrchr(string haystack, string needle) Find the last occurrence of a character in a string
strrpos(string haystack, char needle) Find position of last occurrence of a char in a string
strspn(string str1, string str2) Find length of initial segment matching mask
strstr(string haystack, string needle) Find first occurrence of a string
strtok(string arg1, string arg2) Tokenize string
strtolower(string str) Make a string lowercase
strtotime(string time [, int now]) Parse about any English textual datetime description into a UNIX timestamp
strtoupper(string string) Make a string uppercase
strtr(string str, string from, string to) Translate certain characters
strval(mixed var) Get string value of a variable
substr(string string, int start [, int length]) Return part of a string
substr_count(string haystack, string needle) Count the number of substring occurrences
substr_replace(string string, string replacement, int start [, int length]) Replace text within a portion of a string
swf_actiongeturl(string url, string target) Get a URL from a Shockwave Flash movie
swf_actiongotoframe(int framenumber) Play a frame and then stop
swf_actiongotolabel(string label) Display a frame with the specified label
swf_actionnextframe(void) Go foward one frame
swf_actionplay(void) Start playing the flash movie from the current frame
swf_actionprevframe(void) Go backwards one frame
swf_actionsettarget(string target) Set the context for actions
swf_actionstop(void) Stop playing the flash movie at the current frame
swf_actiontogglequality(void) Toggle between low and high quality
swf_actionwaitforframe(int framenumber, int skipcount) Skip actions if a frame has not been loaded
swf_addbuttonrecord(int states, int shapeid, int depth) Controls location, appearance and active area of the current button
swf_addcolor(float r, float g, float b, float a) Set the global add color to the rgba value specified
swf_closefile([int return_file]) Close the current Shockwave Flash file
swf_definebitmap(int objid, string image_name) Define a bitmap
swf_definefont(int fontid, string fontname) Defines a font
swf_defineline(int objid, float x1, float y1, float x2, float y2, float width) Define a line
swf_definepoly(int objid, array coords, int npoints, float width) Define a polygon
swf_definerect(int objid, float x1, float y1, float x2, float y2, float width) Define a rectangle
swf_definetext(int objid, string str, int docenter) Define a text string
swf_endbutton(void) End the definition of the current button
swf_enddoaction(void) End the current action
swf_endshape(void) Completes the definition of the current shape
swf_endsymbol(void) End the definition of a symbol
swf_fontsize(float size) Change the font size
swf_fontslant(float slant) Set the font slant
swf_fonttracking(float tracking) Set the current font tracking
swf_getbitmapinfo(int bitmapid) Get information about a bitmap
swf_getfontinfo(void) The height in pixels of a capital A and a lowercase x
swf_getframe(void) Get the frame number of the current frame
swf_labelframe(string name) Label the current frame
swf_lookat(float view_x, float view_y, float view_z, float reference_x, float reference_y, float reference_z, float twist) Define a viewing transformation
swf_modifyobject(int depth, int how) Modify an object
swf_mulcolor(float r, float g, float b, float a) Sets the global multiply color to the rgba value specified
swf_nextid(void) Returns the next free object id
swf_oncondition(int transition) Describe a transition used to trigger an action list
swf_openfile(string filename, float width, float height, float framerate, float r, float g, float b) Open a new Shockwave Flash file
swf_ortho(float xmin, float xmax, float ymin, float ymax, float zmin, float zmax) Defines an orthographic mapping of user coordinates onto the current viewport
swf_ortho2(float xmin, float xmax, float ymin, float ymax) Defines 2D orthographic mapping of user coordinates onto the current viewport
swf_perspective(float fovy, float aspect, float near, float far) Define a perspective projection transformation
swf_placeobject(int objid, int depth) Place an object onto the screen
swf_polarview(float dist, float azimuth, float incidence, float twist) Define the viewer's position with polar coordinates
swf_popmatrix(void) Restore a previous transformation matrix
swf_posround(int round) Enables or Disables the rounding of the translation when objects are placed or moved
swf_pushmatrix(void) Push the current transformation matrix back unto the stack
swf_removeobject(int depth) Remove an object
swf_rotate(float angle, string axis) Rotate the current transformation
swf_scale(float x, float y, float z) Scale the current transformation
swf_setfont(int fontid) Change the current font
swf_setframe(int framenumber) Switch to a specified frame
swf_shapearc(float x, float y, float r, float ang1, float ang2) Draw a circular arc
swf_shapecurveto(float x1, float y1, float x2, float y2) Draw a quadratic bezier curve between two points
swf_shapecurveto3(float x1, float y1, float x2, float y2, float x3, float y3) Draw a cubic bezier curve
swf_shapefillbitmapclip(int bitmapid) Set current fill mode to clipped bitmap
swf_shapefillbitmaptile(int bitmapid) Set current fill mode to tiled bitmap
swf_shapefilloff(void) Turns off filling
swf_shapefillsolid(float r, float g, float b, float a) Set the current fill style to the specified color
swf_shapelinesolid(float r, float g, float b, float a, float width) Set the current line style
swf_shapelineto(float x, float y) Draw a line
swf_shapemoveto(float x, float y) Move the current position
swf_showframe(void) Display the current frame
swf_startbutton(int objid, int type) Start the definition of a button
swf_startdoaction(void) Start a description of an action list for the current frame
swf_startshape(int objid) Start a complex shape
swf_startsymbol(int objid) Define a symbol
swf_textwidth(string str) Get the width of a string
swf_translate(float x, float y, float z) Translate the current transformations
swf_viewport(float xmin, float xmax, float ymin, float ymax) Select an area for future drawing
SWFAction(string script) Creates a new Action.
SWFBitmap(string filename [, int alphafilename]) Loads Bitmap object
SWFBitmap->getHeight(void) Returns the bitmap's height.
SWFBitmap->getWidth(void) Returns the bitmap's width.
SWFbutton(void) Creates a new Button.
swfbutton_keypress(string str) Returns the action flag for keyPress(char)
SWFbutton->addAction(ressource action, int flags) Adds an action
SWFbutton->addShape(ressource shape, int flags) Adds a shape to a button
SWFbutton->setAction(ressource action) Sets the action
SWFbutton->setdown(ressource shape) Alias for addShape(shape, SWFBUTTON_DOWN))
SWFbutton->setHit(ressource shape) Alias for addShape(shape, SWFBUTTON_HIT)
SWFbutton->setOver(ressource shape) Alias for addShape(shape, SWFBUTTON_OVER)
SWFbutton->setUp(ressource shape) Alias for addShape(shape, SWFBUTTON_UP)
SWFDisplayItem(void) Creates a new displayitem object.
SWFDisplayItem->addColor([int red [, int green [, int blue [, int a]]]]) Adds the given color to this item's color transform.
SWFDisplayItem->move(int dx, int dy) Moves object in relative coordinates.
SWFDisplayItem->moveTo(int x, int y) Moves object in global coordinates.
SWFDisplayItem->multColor([int red [, int green [, int blue [, int a]]]]) Multiplies the item's color transform.
SWFDisplayItem->remove(void) Removes the object from the movie
SWFDisplayItem->Rotate(float ddegrees) Rotates in relative coordinates.
SWFDisplayItem->rotateTo(float degrees) Rotates the object in global coordinates.
SWFDisplayItem->scale(int dx, int dy) Scales the object in relative coordinates.
SWFDisplayItem->scaleTo(int x, int y) Scales the object in global coordinates.
SWFDisplayItem->setDepth(float depth) Sets z-order
SWFDisplayItem->setName(string name) Sets the object's name
SWFDisplayItem->setRatio(float ratio) Sets the object's ratio.
SWFDisplayItem->skewX(float ddegrees) Sets the X-skew.
SWFDisplayItem->skewXTo(float degrees) Sets the X-skew.
SWFDisplayItem->skewY(float ddegrees) Sets the Y-skew.
SWFDisplayItem->skewYTo(float degrees) Sets the Y-skew.
SWFFill(?) Loads SWFFill object
SWFFill->moveTo(int x, int y) Moves fill origin
SWFFill->rotateTo(float degrees) Sets fill's rotation
SWFFill->scaleTo(int x, int y) Sets fill's scale
SWFFill->skewXTo(float x) Sets fill x-skew
SWFFill->skewYTo(float y) Sets fill y-skew
SWFFont(string filename) Loads a font definition
swffont->getwidth(string string) Returns the string's width
SWFGradient(void) Creates a gradient object
SWFGradient->addEntry(float ratio, int red, int green, int blue [, int a]) Adds an entry to the gradient list.
SWFMorph(void) Creates a new SWFMorph object.
SWFMorph->getshape1(void) Gets a handle to the starting shape
SWFMorph->getshape2(void) Gets a handle to the ending shape
SWFMovie(void) Creates a new movie object, representing an SWF version 4 movie.
SWFMovie->add(ressource instance) Adds any type of data to a movie.
SWFMovie->nextframe(void) Moves to the next frame of the animation.
SWFMovie->output(void) Dumps your lovingly prepared movie out.
SWFMovie->remove(resource instance) Removes the object instance from the display list.
SWFMovie->save(string filename) Saves your movie in a file.
SWFMovie->setbackground(int red, int green, int blue) Sets the background color.
SWFMovie->setdimension(int width, int height) Sets the movie's width and height.
SWFMovie->setframes(string numberofframes) Sets the total number of frames in the animation.
SWFMovie->setrate(int rate) Sets the animation's frame rate.
SWFMovie->streammp3(string mp3FileName) Streams a MP3 file.
SWFShape(void) Creates a new shape object.
SWFShape->addFill(int red, int green, int blue [, int a]) Adds a solid fill to the shape.
SWFShape->drawCurve(int controldx, int controldy, int anchordx, int anchordy) Draws a curve (relative).
SWFShape->drawCurveTo(int controlx, int controly, int anchorx, int anchory) Draws a curve.
SWFShape->drawLine(int dx, int dy) Draws a line (relative).
SWFShape->drawLineTo(int x, int y) Draws a line.
SWFShape->movePen(int dx, int dy) Moves the shape's pen (relative).
SWFShape->movePenTo(int x, int y) Moves the shape's pen.
SWFShape->setLeftFill(swfgradient fill) Sets left rasterizing color.
SWFShape->setLine(int width [, int red [, int green [, int blue [, int a]]]]) Sets the shape's line style.
SWFShape->setRightFill(swfgradient fill) Sets right rasterizing color.
SWFSprite(void) Creates a movie clip (a sprite)
SWFSprite->add(resource object) Adds an object to a sprite
SWFSprite->nextframe(void) Moves to the next frame of the animation.
SWFSprite->remove(ressource object) Removes an object to a sprite
SWFSprite->setframes(int numberofframes) Sets the total number of frames in the animation.
SWFText(void) Creates a new SWFText object.
SWFText->addString(string string) Draws a string
SWFText->getWidth(string string) Computes string's width
SWFText->moveTo(int x, int y) Moves the pen
SWFText->setColor(int red, int green, int blue [, int a]) Sets the current font color
SWFText->setFont(string font) Sets the current font
SWFText->setHeight(int height) Sets the current font height
SWFText->setSpacing(float spacing) Sets the current font spacing
SWFTextField([int flags]) Creates a text field object
SWFTextField->addstring(string string) Concatenates the given string to the text field
SWFTextField->align(int alignement) Sets the text field alignment
SWFTextField->setbounds(int width, int height) Sets the text field width and height
SWFTextField->setcolor(int red, int green, int blue [, int a]) Sets the color of the text field.
SWFTextField->setFont(string font) Sets the text field font
SWFTextField->setHeight(int height) Sets the font height of this text field font.
SWFTextField->setindentation(int width) Sets the indentation of the first line.
SWFTextField->setLeftMargin(int width) Sets the left margin width of the text field.
SWFTextField->setLineSpacing(int height) Sets the line spacing of the text field.
SWFTextField->setMargins(int left, int right) Sets the margins width of the text field.
SWFTextField->setname(string name) Sets the variable name
SWFTextField->setrightMargin(int width) Sets the right margin width of the text field.
sybase_affected_rows([int link_identifier]) get number of affected rows in last query
sybase_close(int link_identifier) close Sybase connection
sybase_connect(string servername, string username, string password [, string charset]) open Sybase server connection
sybase_data_seek(int result_identifier, int row_number) move internal row pointer
sybase_fetch_array(int result) fetch row as array
sybase_fetch_field(int result [, int field_offset]) get field information
sybase_fetch_object(int result) fetch row as object
sybase_fetch_row(int result) get row as enumerated array
sybase_field_seek(int result, int field_offset) set field offset
sybase_free_result(int result) free result memory
sybase_get_last_message(void) Returns the last message from the server
sybase_min_client_severity(int severity) Sets minimum client severity
sybase_min_error_severity(int severity) Sets minimum error severity
sybase_min_message_severity(int severity) Sets minimum message severity
sybase_min_server_severity(int severity) Sets minimum server severity
sybase_num_fields(int result) get number of fields in result
sybase_num_rows(int result) get number of rows in result
sybase_pconnect(string servername, string username, string password [, string charset]) open persistent Sybase connection
sybase_query(string query, int link_identifier) send Sybase query
sybase_result(int result, int row, mixed field) get result data
sybase_select_db(string database_name, int link_identifier) select Sybase database
symlink(string target, string link) Creates a symbolic link
syslog(int priority, string message) Generate a system log message
system(string command [, int return_var]) Execute an external program and display output
tan(float arg) Tangent
tanh(float arg) Hyperbolic tangent
tempnam(string dir, string prefix) Create file with unique file name
textdomain(string text_domain) Sets the default domain
time(void) Return current UNIX timestamp
tmpfile(void) Creates a temporary file
touch(string filename [, int time]) Sets access and modification time of file
trigger_error(string error_msg [, int error_type]) Generates a user-level error/warning/notice message
trim(string str [, string charlist]) Strip whitespace from the beginning and end of a string
uasort(array array, function cmp_function) Sort an array with a user-defined comparison function and maintain index association
ucfirst(string str) Make a string's first character uppercase
ucwords(string str) Uppercase the first character of each word in a string
udm_add_search_limit(int agent, int var, string val) Add various search limits
udm_alloc_agent(string dbaddr [, string dbmode]) Allocate mnoGoSearch session
udm_api_version(void) Get mnoGoSearch API version.
udm_cat_list(int agent, string category) Get all the categories on the same level with the current one.
udm_cat_path(int agent, string category) Get the path to the current category.
udm_clear_search_limits(int agent) Clear all mnoGoSearch search restrictions
udm_close_stored(int agent, int link) Close connection to stored
udm_crc32(int agent, string str) Return CRC32 checksum of gived string
udm_errno(int agent) Get mnoGoSearch error number
udm_error(int agent) Get mnoGoSearch error message
udm_find(int agent, string query) Perform search
udm_free_agent(int agent) Free mnoGoSearch session
udm_free_ispell_data(int agent) Free memory allocated for ispell data
udm_free_res(int res) Free mnoGoSearch result
udm_get_doc_count(int agent) Get total number of documents in database.
udm_get_res_field(int res, int row, int field) Fetch mnoGoSearch result field
udm_get_res_param(int res, int param) Get mnoGoSearch result parameters
udm_check_charset(int agent, string charset) Check if the given charset is known to mnogosearch
udm_check_stored(int agent, int link, string doc_id) Check connection to stored
udm_load_ispell_data(int agent, int var, string val1, string val2, int flag) Load ispell data
udm_open_stored(int agent, string storedaddr) Open connection to stored
udm_set_agent_param(int agent, int var, string val) Set mnoGoSearch agent session parameters
uksort(array array, function cmp_function) Sort an array by keys using a user-defined comparison function
umask(int mask) Changes the current umask
uniqid(string prefix [, bool lcg]) Generate a unique id
unixtojd([int timestamp]) Convert UNIX timestamp to Julian Day
unlink(string filename) Deletes a file
unpack(string format, string data) Unpack data from binary string
unregister_tick_function(string func [, mixed arg]) De-register a function for execution on each tick
unserialize(string str) Creates a PHP value from a stored representation
unset(mixed var [, mixed var [, ...]]) Unset a given variable
urldecode(string str) Decodes URL-encoded string
urlencode(string str) URL-encodes string
user_error(string error_msg [, int error_type]) Generates a user-level error/warning/notice message
usleep(int micro_seconds) Delay execution in microseconds
usort(array array, string cmp_function) Sort an array by values using a user-defined comparison function
utf8_decode(string data) Converts a string with ISO-8859-1 characters encoded with UTF-8 to single-byte ISO-8859-1.
utf8_encode(string data) encodes an ISO-8859-1 string to UTF-8
var_dump(mixed expression [, mixed expression [, ...]]) Dumps information about a variable
var_export(mixed expression [, bool return]) Outputs or returns a string representation of a variable
version_compare(string version1, string version2 [, string operator]) Compares two "PHP-standardized" version number strings
virtual(string filename) Perform an Apache sub-request
vpopmail_add_alias_domain(string domain, string aliasdomain) Add an alias for a virtual domain
vpopmail_add_alias_domain_ex(string olddomain, string newdomain) Add alias to an existing virtual domain
vpopmail_add_domain(string domain, string dir, int uid, int gid) Add a new virtual domain
vpopmail_add_domain_ex(string domain, string passwd [, string quota [, string bounce [, bool apop]]]) Add a new virtual domain
vpopmail_add_user(string user, string domain, string password [, string gecos [, bool apop]]) Add a new user to the specified virtual domain
vpopmail_alias_add(string user, string domain, string alias) insert a virtual alias
vpopmail_alias_del(string user, string domain) deletes all virtual aliases of a user
vpopmail_alias_del_domain(string domain) deletes all virtual aliases of a domain
vpopmail_alias_get(string alias, string domain) get all lines of an alias for a domain
vpopmail_alias_get_all(string domain) get all lines of an alias for a domain
vpopmail_auth_user(string user, string domain, string password [, string apop]) Attempt to validate a username/domain/password. Returns true/false
vpopmail_del_domain(string domain) Delete a virtual domain
vpopmail_del_domain_ex(string domain) Delete a virtual domain
vpopmail_del_user(string user, string domain) Delete a user from a virtual domain
vpopmail_error(void) Get text message for last vpopmail error. Returns string
vpopmail_passwd(string user, string domain, string password) Change a virtual user's password
vpopmail_set_user_quota(string user, string domain, string quota) Sets a virtual user's quota
vprintf(string format, array args) Output a formatted string
vsprintf(string format, array args) Return a formatted string
w32api_deftype(string typename, string member1_type, string member1_name) Defines a type for use with other w32api_functions
w32api_init_dtype(string typename, mixed val1, mixed val2) Creates an instance to the data type typename and fills it with the values val1, val2, the function then returns a DYNAPARM which can be passed when invoking a function as a parameter
w32api_invoke_function(string funcname) Invokes function funcname with the arguments passed after the function name
w32api_register_function(string libary, string function_name) Registers function function_name from library with PHP
w32api_set_call_method(int method) Sets the calling method used
wddx_add_vars(int packet_id, mixed name_var [, mixed ...]) Add variables to a WDDX packet with the specified ID
wddx_deserialize(string packet) Deserializes a WDDX packet
wddx_packet_end(int packet_id) Ends a WDDX packet with the specified ID
wddx_packet_start([string comment]) Starts a new WDDX packet with structure inside it
wddx_serialize_value(mixed var [, string comment]) Serialize a single value into a WDDX packet
wddx_serialize_vars(mixed var_name [, mixed ...]) Serialize variables into a WDDX packet
wordwrap(string str [, int width [, string break [, int cut]]]) Wraps a string to a given number of characters using a string break character.
xml_error_string(int code) get XML parser error string
xml_get_current_byte_index(resource parser) get current byte index for an XML parser
xml_get_current_column_number(resource parser) Get current column number for an XML parser
xml_get_current_line_number(resource parser) get current line number for an XML parser
xml_get_error_code(resource parser) get XML parser error code
xml_parse(resource parser, string data [, bool is_final]) start parsing an XML document
xml_parse_into_struct(resource parser, string data, array &values, array &index) Parse XML data into an array structure
xml_parser_create([string encoding]) create an XML parser
xml_parser_create_ns([string encoding [, string sep]]) Create an XML parser
xml_parser_free(resource parser) Free an XML parser
xml_parser_get_option(resource parser, int option) get options from an XML parser
xml_parser_set_option(resource parser, int option, mixed value) set options in an XML parser
xml_set_default_handler(resource parser, string handler) set up default handler
xml_set_element_handler(resource parser, string start_element_handler, string end_element_handler) set up start and end element handlers
xml_set_end_namespace_decl_handler(resource pind, string hdl) Set up character data handler
xml_set_external_entity_ref_handler(resource parser, string handler) set up external entity reference handler
xml_set_character_data_handler(resource parser, string handler) set up character data handler
xml_set_notation_decl_handler(resource parser, string handler) set up notation declaration handler
xml_set_object(resource parser, object &object) Use XML Parser within an object
xml_set_processing_instruction_handler(resource parser, string handler) Set up processing instruction (PI) handler
xml_set_start_namespace_decl_handler(resource pind, string hdl) Set up character data handler
xml_set_unparsed_entity_decl_handler(resource parser, string handler) Set up unparsed entity declaration handler
xmlrpc_decode(string xml [, string encoding]) Decodes XML into native PHP types
xmlrpc_decode_request(string xml, string method [, string encoding]) Decodes XML into native PHP types
xmlrpc_encode(mixed value) Generates XML for a PHP value
xmlrpc_encode_request(string method, mixed params) Generates XML for a method request
xmlrpc_get_type(mixed value) Gets xmlrpc type for a PHP value. Especially useful for base64 and datetime strings
xmlrpc_parse_method_descriptions(string xml) Decodes XML into a list of method descriptions
xmlrpc_server_add_introspection_data(resource server, array desc) Adds introspection documentation
xmlrpc_server_call_method(resource server, string xml, mixed user_data [, array output_options]) Parses XML requests and call methods
xmlrpc_server_create(void) Creates an xmlrpc server
xmlrpc_server_destroy(resource server) Destroys server resources
xmlrpc_server_register_introspection_callback(resource server, string function) Register a PHP function to generate documentation
xmlrpc_server_register_method(resource server, string method_name, string function) Register a PHP function to resource method matching method_name
xmlrpc_set_type(string value, string type) Sets xmlrpc type, base64 or datetime, for a PHP string value
xpath_eval(object xpath context) Evaluates the XPath Location Path in the given string
xpath_eval_expression(object xpath_context) Evaluates the XPath Location Path in the given string
xpath_new_context(object dom document) Creates new xpath context
xptr_eval([object xpath_context, string eval_str]) Evaluate the XPtr Location Path in the given string
xptr_new_context([object doc_handle]) Create new XPath Context
xslt_create(void) Create a new XSLT processor.
xslt_errno(resource xh) Return a error number
xslt_error(resource xh) Return a error string
xslt_free(resource xh) Free XSLT processor
xslt_process(resource xh, string xml, string xsl [, string result [, array arguments [, array parameters]]]) Perform an XSLT transformation
xslt_set_base(resource xh, string uri) Set the base URI for all XSLT transformations
xslt_set_encoding(resource xh, string encoding) Set the encoding for the parsing of XML documents
xslt_set_error_handler(resource xh, mixed handler) Set an error handler for a XSLT processor
xslt_set_log(resource xh, mixed log) Set the log file to write log messages to
xslt_set_sax_handler(resource xh, array handlers) Set SAX handlers for a XSLT processor
xslt_set_sax_handlers(resource processor, array handlers) Set the SAX handlers to be called when the XML document gets processed
xslt_set_scheme_handler(resource xh, array handlers) Set Scheme handlers for a XSLT processor
xslt_set_scheme_handlers(resource processor, array handlers) Set the scheme handlers for the XSLT processor
yaz_addinfo(int id) Returns additional error information
yaz_ccl_conf(int id, array config) Configure CCL parser
yaz_ccl_parse(int id, string query, array & result) Invoke CCL Parser
yaz_close(int id) Closes a YAZ connection
yaz_connect(string zurl [, mixed options]) Prepares for a connection and Z-association to a Z39.50 target.
yaz_database(int id, string databases) Specifies the databases within a session
yaz_element(int id, string elementset) Specifies Element-Set Name for retrieval
yaz_errno(int id) Returns error number
yaz_error(int id) Returns error description
yaz_hits(int id) Returns number of hits for last search
yaz_itemorder(array args) Prepares for Z39.50 Item Order with an ILL-Request package
yaz_present(void) Prepares for retrieval (Z39.50 present).
yaz_range(int id, int start, int number) Specifies the maximum number of records to retrieve
yaz_record(int id, int pos, string type) Returns a record
yaz_scan(int id, string type, string startterm [, array flags]) Prepares for a scan
yaz_scan_result(int id [, array & result]) Returns Scan Response result
yaz_search(int id, string type, string query) Prepares for a search
yaz_sort(int id, string criteria) Sets sorting criteria
yaz_syntax(int id, string syntax) Specifies the preferred record syntax for retrieval.
yaz_wait([ array options]) Wait for Z39.50 requests to complete
yp_all(string domain, string map, string callback) Traverse the map and call a function on each entry
yp_cat(string domain, string map) Return an array containing the entire map
yp_err_string(void) Returns the error string associated with the previous operation
yp_errno(void) Returns the error code of the previous operation
yp_first(string domain, string map) Returns the first key-value pair from the named map
yp_get_default_domain(void) Fetches the machine's default NIS domain
yp_master(string domain, string map) Returns the machine name of the master NIS server for a map
yp_match(string domain, string map, string key) Returns the matched line
yp_next(string domain, string map, string key) Returns the next key-value pair in the named map.
yp_order(string domain, string map) Returns the order number for a map
zend_logo_guid(void) Gets the zend guid
zend_version(void) Gets the version of the current Zend engine
zip_close(resource zip) Close a Zip File Archive
zip_entry_close(resource zip_entry) Close a Directory Entry
zip_entry_compressedsize(resource zip_entry) Retrieve the Compressed Size of a Directory Entry
zip_entry_compressionmethod(resource zip_entry) Retrieve the Compression Method of a Directory Entry
zip_entry_filesize(resource zip_entry) Retrieve the Actual File Size of a Directory Entry
zip_entry_name(resource zip_entry) Retrieve the Name of a Directory Entry
zip_entry_open(resource zip, resource zip_entry [, string mode]) Open a Directory Entry for Reading
zip_entry_read(resource zip_entry [, int length]) Read From an Open Directory Entry
zip_open(string filename) Open a Zip File Archive
zip_read(resource zip) Read Next Entry in a Zip File Archive
